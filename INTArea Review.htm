<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> 
<!-- Generated by rfcdiff 1.45: rfcdiff  --> 
<!-- <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional" > -->
<!-- System: Linux ietf-author-tools-84d667c97d-d2gjh 5.10.205-195.807.amzn2.x86_64 #1 SMP Tue Jan 16 18:28:59 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux --> 
<!-- Using awk: /usr/bin/gawk: GNU Awk 5.1.0, API: 3.0 (GNU MPFR 4.1.0, GNU MP 6.2.1) --> 
<!-- Using diff: /usr/bin/diff: diff (GNU diffutils) 3.8 --> 
<!-- Using wdiff: /usr/bin/wdiff: wdiff (GNU wdiff) 1.2.2 --> 
<html xmlns="http://www.w3.org/1999/xhtml"> 
<head> 
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /> 
  <meta http-equiv="Content-Style-Type" content="text/css" /> 
  <title>Diff: draft-ietf-6lo-multicast-registration-18.txt - draft-ietf-6lo-multicast-registration-19.txt</title> 
  <style type="text/css"> 
    body    { margin: 0.4ex; margin-right: auto; } 
    tr      { } 
    td      { white-space: pre; font-family: monospace; vertical-align: top; font-size: 0.86em;} 
    th      { font-size: 0.86em; } 
    .small  { font-size: 0.6em; font-style: italic; font-family: Verdana, Helvetica, sans-serif; } 
    .left   { background-color: #EEE; } 
    .right  { background-color: #FFF; } 
    .diff   { background-color: #CCF; } 
    .lblock { background-color: #BFB; } 
    .rblock { background-color: #FF8; } 
    .insert { background-color: #8FF; } 
    .delete { background-color: #ACF; } 
    .void   { background-color: #FFB; } 
    .cont   { background-color: #EEE; } 
    .linebr { background-color: #AAA; } 
    .lineno { color: red; background-color: #FFF; font-size: 0.7em; text-align: right; padding: 0 2px; } 
    .elipsis{ background-color: #AAA; } 
    .left .cont { background-color: #DDD; } 
    .right .cont { background-color: #EEE; } 
    .lblock .cont { background-color: #9D9; } 
    .rblock .cont { background-color: #DD6; } 
    .insert .cont { background-color: #0DD; } 
    .delete .cont { background-color: #8AD; } 
    .stats, .stats td, .stats th { background-color: #EEE; padding: 2px 0; } 
    span.hide { display: none; color: #aaa;}    a:hover span { display: inline; }    tr.change { background-color: gray; } 
    tr.change a { text-decoration: none; color: black } 
  </style> 
     <script>
var chunk_index = 0;
var old_chunk = null;

function format_chunk(index) {
    var prefix = "diff";
    var str = index.toString();
    for (x=0; x<(4-str.length); ++x) {
        prefix+='0';
    }
    return prefix + str;
}

function find_chunk(n){
    return document.querySelector('tr[id$="' + n + '"]');
}

function change_chunk(offset) {
    var index = chunk_index + offset;
    var new_str;
    var new_chunk;

    new_str = format_chunk(index);
    new_chunk = find_chunk(new_str);
    if (!new_chunk) {
        return;
    }
    if (old_chunk) {
        old_chunk.style.outline = "";
    }
    old_chunk = new_chunk;
    old_chunk.style.outline = "1px solid red";
    window.location.hash = "#" + new_str;
    window.scrollBy(0,-100);
    chunk_index = index;
}

document.onkeydown = function(e) {
    switch (e.keyCode) {
    case 78:
        change_chunk(1);
        break;
    case 80:
        change_chunk(-1);
        break;
    }
};
   </script> 
</head> 
<body > 
  <table border="0" cellpadding="0" cellspacing="0"> 
  <tr id="part-1" bgcolor="orange"><th></th><th>&nbsp;draft-ietf-6lo-multicast-registration-18.txt&nbsp;</th><th> </th><th>&nbsp;draft-ietf-6lo-multicast-registration-19.txt&nbsp;</th><th></th></tr> 
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-1" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-1"><em> page 1, line 18<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-1"><em> page 1, line 18<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">Expires: 18 October 2024</td><td> </td><td class="right">Expires: 18 October 2024</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     IPv6 Neighbor Discovery Multicast and Anycast Address Listener</td><td> </td><td class="right">     IPv6 Neighbor Discovery Multicast and Anycast Address Listener</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">                              Subscription</td><td> </td><td class="right">                              Subscription</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">                draft-ietf-6lo-multicast-registration-18</td><td> </td><td class="right">                draft-ietf-6lo-multicast-registration-18</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">Abstract</td><td> </td><td class="right">Abstract</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   This document updates the 6LoWPAN extensions to IPv6 Neighbor</td><td> </td><td class="right">   This document updates the 6LoWPAN extensions to IPv6 Neighbor</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Discovery (RFC 4861, RFC 8505) to enable a listener to subscribe to</td><td> </td><td class="right">   Discovery (RFC 4861, RFC 8505) to enable a listener to subscribe to</td><td class="lineno"></td></tr>
      <tr id="diff0001"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   an IPv6 anycast or multicast address; the document updates R<span class="delete">PL</span> (RFC</td><td> </td><td class="rblock">   an IPv6 anycast or multicast address; the document updates R<span class="insert">outing Protocol for Low-Power and Lossy Networks (RPL)</span> (RFC</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   6550, RFC 6553) to add a new Non-Storing Multicast Mode and a new</td><td> </td><td class="right">   6550, RFC 6553) to add a new Non-Storing Multicast Mode and a new</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   support for anycast addresses in Storing and Non-Storing Modes.  This</td><td> </td><td class="right">   support for anycast addresses in Storing and Non-Storing Modes.  This</td><td class="lineno"></td></tr>
      <tr id="diff0002"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   document extends RFC 9010 to enable the 6L<span class="delete">R</span> to inject the anycast and</td><td> </td><td class="rblock">   document extends RFC 9010 to enable the 6L<span class="insert">oWPAN Router (6LR)</span> to inject the anycast and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   multicast addresses in RPL.</td><td> </td><td class="right">   multicast addresses in RPL.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">Status of This Memo</td><td> </td><td class="right">Status of This Memo</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   This Internet-Draft is submitted in full conformance with the</td><td> </td><td class="right">   This Internet-Draft is submitted in full conformance with the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   provisions of BCP 78 and BCP 79.</td><td> </td><td class="right">   provisions of BCP 78 and BCP 79.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Internet-Drafts are working documents of the Internet Engineering</td><td> </td><td class="right">   Internet-Drafts are working documents of the Internet Engineering</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Task Force (IETF).  Note that other groups may also distribute</td><td> </td><td class="right">   Task Force (IETF).  Note that other groups may also distribute</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   working documents as Internet-Drafts.  The list of current Internet-</td><td> </td><td class="right">   working documents as Internet-Drafts.  The list of current Internet-</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-2" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-2"><em> page 3, line 34<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-2"><em> page 3, line 34<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   This trades the quality of peer-to-peer (P2P) paths for a vastly</td><td> </td><td class="right">   This trades the quality of peer-to-peer (P2P) paths for a vastly</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   reduced amount of control traffic and routing state that would be</td><td> </td><td class="right">   reduced amount of control traffic and routing state that would be</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   required to operate an any-to-any shortest path protocol.</td><td> </td><td class="right">   required to operate an any-to-any shortest path protocol.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Additionally, broken routes may be fixed lazily and on-demand, based</td><td> </td><td class="right">   Additionally, broken routes may be fixed lazily and on-demand, based</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   on dataplane inconsistency discovery, which avoids wasting energy in</td><td> </td><td class="right">   on dataplane inconsistency discovery, which avoids wasting energy in</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the proactive repair of unused paths.</td><td> </td><td class="right">   the proactive repair of unused paths.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   RPL uses Destination Advertisement Object (DAO) messages to establish</td><td> </td><td class="right">   RPL uses Destination Advertisement Object (DAO) messages to establish</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Downward routes.  DAO messages are an optional feature for</td><td> </td><td class="right">   Downward routes.  DAO messages are an optional feature for</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   applications that require point-to-multipoint (P2MP) or point-to-</td><td> </td><td class="right">   applications that require point-to-multipoint (P2MP) or point-to-</td><td class="lineno"></td></tr>
      <tr id="diff0003"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   point (P2P) traffic.  RPL supports two modes of Downward traffic:</td><td> </td><td class="rblock">   point (P2P)<span class="insert">?</span> traffic.  RPL supports two modes of Downward traffic:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Storing (fully stateful) or Non-Storing (fully source routed); see</td><td> </td><td class="right">   Storing (fully stateful) or Non-Storing (fully source routed); see</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Section 9 of [RFC6550].  The mode is signaled in the Mode of</td><td> </td><td class="right">   Section 9 of [RFC6550].  The mode is signaled in the Mode of</td><td class="lineno"></td></tr>
      <tr id="diff0004"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   Operation (MoP<span class="delete">) field in the DIO</span> messages and applies to the whole</td><td> </td><td class="rblock">   Operation (MoP<span class="insert"> or MOP?) field in the DODAG Information Object (DIO)</span> messages and applies to the whole</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   RPL Instance.</td><td> </td><td class="right">   RPL Instance.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Any given RPL Instance is either storing or non-storing.  In both</td><td> </td><td class="right">   Any given RPL Instance is either storing or non-storing.  In both</td><td class="lineno"></td></tr>
      <tr id="diff0005"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   cases, P2P packets travel Up toward a DODAG root then Down to the</td><td> </td><td class="rblock">   cases, P2P packets travel Up toward<span class="insert">s</span> a DODAG root then Down to the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   final destination (unless the destination is on the Upward route).</td><td> </td><td class="right">   final destination (unless the destination is on the Upward route).</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   In the Non-Storing case, the packet will travel all the way to a</td><td> </td><td class="right">   In the Non-Storing case, the packet will travel all the way to a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   DODAG root before traveling Down.  In the Storing case, the packet</td><td> </td><td class="right">   DODAG root before traveling Down.  In the Storing case, the packet</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   may be directed Down towards the destination by a common ancestor of</td><td> </td><td class="right">   may be directed Down towards the destination by a common ancestor of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the source and the destination prior to reaching a DODAG root.</td><td> </td><td class="right">   the source and the destination prior to reaching a DODAG root.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Section 12 of [RFC6550] details the "Storing Mode of Operation with</td><td> </td><td class="right">   Section 12 of [RFC6550] details the "Storing Mode of Operation with</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   multicast support" with source-independent multicast routing in RPL.</td><td> </td><td class="right">   multicast support" with source-independent multicast routing in RPL.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The classical "IPv6 Neighbor Discovery (IPv6 ND) Protocol" [RFC4861]</td><td> </td><td class="right">   The classical "IPv6 Neighbor Discovery (IPv6 ND) Protocol" [RFC4861]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [RFC4862] was defined for serial links and shared transit media such</td><td> </td><td class="right">   [RFC4862] was defined for serial links and shared transit media such</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-3" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-3"><em> page 4, line 19<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-3"><em> page 4, line 19<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   targeted, which is a waste of energy, and imply that all nodes are</td><td> </td><td class="right">   targeted, which is a waste of energy, and imply that all nodes are</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   awake to hear the request, which is inconsistent with power saving</td><td> </td><td class="right">   awake to hear the request, which is inconsistent with power saving</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   (sleeping) modes.</td><td> </td><td class="right">   (sleeping) modes.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The original 6LoWPAN ND, "Neighbor Discovery Optimizations for</td><td> </td><td class="right">   The original 6LoWPAN ND, "Neighbor Discovery Optimizations for</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   6LoWPAN networks" [RFC6775], was introduced to avoid the excessive</td><td> </td><td class="right">   6LoWPAN networks" [RFC6775], was introduced to avoid the excessive</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   use of multicast messages and enable IPv6 ND for operations over</td><td> </td><td class="right">   use of multicast messages and enable IPv6 ND for operations over</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   energy-constrained nodes.  [RFC6775] changes the classical IPv6 ND</td><td> </td><td class="right">   energy-constrained nodes.  [RFC6775] changes the classical IPv6 ND</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   model to proactively establish the Neighbor Cache Entry (NCE)</td><td> </td><td class="right">   model to proactively establish the Neighbor Cache Entry (NCE)</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   associated to the unicast address of a 6LoWPAN Node (6LN) in the</td><td> </td><td class="right">   associated to the unicast address of a 6LoWPAN Node (6LN) in the</td><td class="lineno"></td></tr>
      <tr id="diff0006"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   6LoWPAN Router(s) (6LR) that serve<span class="delete">s</span> it.  To that effect, [RFC6775]</td><td> </td><td class="rblock">   6LoWPAN Router(s) (6LR) that serve<span class="insert">(s)</span> it.  To that effect, [RFC6775]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   defines a new Address Registration Option (ARO) that is placed in</td><td> </td><td class="right">   defines a new Address Registration Option (ARO) that is placed in</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   unicast Neighbor Solicitation (NS) and Neighbor Advertisement (NA)</td><td> </td><td class="right">   unicast Neighbor Solicitation (NS) and Neighbor Advertisement (NA)</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   messages between the 6LN and the 6LR.</td><td> </td><td class="right">   messages between the 6LN and the 6LR.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   "Registration Extensions for 6LoWPAN Neighbor Discovery" [RFC8505]</td><td> </td><td class="right">   "Registration Extensions for 6LoWPAN Neighbor Discovery" [RFC8505]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   updates [RFC6775] into a generic Address Registration mechanism that</td><td> </td><td class="right">   updates [RFC6775] into a generic Address Registration mechanism that</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   can be used to access services such as routing and ND proxy and</td><td> </td><td class="right">   can be used to access services such as routing and ND proxy and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   introduces the Extended Address Registration Option (EARO) for that</td><td> </td><td class="right">   introduces the Extended Address Registration Option (EARO) for that</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   purpose.  This provides a routing-agnostic interface for a host to</td><td> </td><td class="right">   purpose.  This provides a routing-agnostic interface for a host to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   request that the router injects a unicast IPv6 address in the local</td><td> </td><td class="right">   request that the router injects a unicast IPv6 address in the local</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   routing protocol and provide return reachability for that address.</td><td> </td><td class="right">   routing protocol and provide return reachability for that address.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   "Routing for RPL Leaves" [RFC9010] provides the router counterpart of</td><td> </td><td class="right">   "Routing for RPL Leaves" [RFC9010] provides the router counterpart of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the mechanism for a host that implements [RFC8505] to inject its</td><td> </td><td class="right">   the mechanism for a host that implements [RFC8505] to inject its</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   unicast Unique Local Addresses (ULAs) and Global Unicast Addresses</td><td> </td><td class="right">   unicast Unique Local Addresses (ULAs) and Global Unicast Addresses</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   (GUAs) in RPL.  But though RPL also provides multicast routing,</td><td> </td><td class="right">   (GUAs) in RPL.  But though RPL also provides multicast routing,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   6LoWPAN ND supports only the registration of unicast addresses and</td><td> </td><td class="right">   6LoWPAN ND supports only the registration of unicast addresses and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   there is no equivalent of [RFC9010] to specify the 6LR behavior upon</td><td> </td><td class="right">   there is no equivalent of [RFC9010] to specify the 6LR behavior upon</td><td class="lineno"></td></tr>
      <tr id="diff0007"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   the subscription of one or more multicast address.</td><td> </td><td class="rblock">   the subscription of one or more multicast address<span class="insert">(es)</span>.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The "Multicast Listener Discovery Version 2 (MLDv2) for IPv6"</td><td> </td><td class="right">   The "Multicast Listener Discovery Version 2 (MLDv2) for IPv6"</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [RFC3810] enables the router to learn which node listens to which</td><td> </td><td class="right">   [RFC3810] enables the router to learn which node listens to which</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   multicast address, but as the classical IPv6 ND protocol, MLD relies</td><td> </td><td class="right">   multicast address, but as the classical IPv6 ND protocol, MLD relies</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   on multicasting Queries to all nodes, which is unfit for low power</td><td> </td><td class="right">   on multicasting Queries to all nodes, which is unfit for low power</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   operations.  As for IPv6 ND, it makes sense to let the 6LNs control</td><td> </td><td class="right">   operations.  As for IPv6 ND, it makes sense to let the 6LNs control</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   when and how they maintain the state associated to their multicast</td><td> </td><td class="right">   when and how they maintain the state associated to their multicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   addresses in the 6LR, e.g., during their own wake time.  In the case</td><td> </td><td class="right">   addresses in the 6LR, e.g., during their own wake time.  In the case</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   of a constrained node that already implements [RFC8505] for unicast</td><td> </td><td class="right">   of a constrained node that already implements [RFC8505] for unicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   reachability, it makes sense to extend to that support to subscribe</td><td> </td><td class="right">   reachability, it makes sense to extend to that support to subscribe</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-4" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-4"><em> page 5, line 14<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-4"><em> page 5, line 14<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   This specification Extends [RFC8505] and [RFC9010] to add the</td><td> </td><td class="right">   This specification Extends [RFC8505] and [RFC9010] to add the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   capability for the 6LN to subscribe anycast and multicast addresses</td><td> </td><td class="right">   capability for the 6LN to subscribe anycast and multicast addresses</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   and for the 6LR to inject them in RPL when appropriate.  Note that</td><td> </td><td class="right">   and for the 6LR to inject them in RPL when appropriate.  Note that</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   due to the unreliable propagation of packets in the LLN, it cannot be</td><td> </td><td class="right">   due to the unreliable propagation of packets in the LLN, it cannot be</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   guaranteed that any given packet is delivered once and only once.  If</td><td> </td><td class="right">   guaranteed that any given packet is delivered once and only once.  If</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   a breakage happens along the preferred parent tree that is normally</td><td> </td><td class="right">   a breakage happens along the preferred parent tree that is normally</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   used for multicast forwarding, the packet going up may be rerouted to</td><td> </td><td class="right">   used for multicast forwarding, the packet going up may be rerouted to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   an alternate parent, leading to potential failures and duplications,</td><td> </td><td class="right">   an alternate parent, leading to potential failures and duplications,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   whereas a packet going down will not be delivered in the subtree.  It</td><td> </td><td class="right">   whereas a packet going down will not be delivered in the subtree.  It</td><td class="lineno"></td></tr>
      <tr id="diff0008"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   is up to the ULP to cope with both situations.</td><td> </td><td class="rblock">   is up to the ULP <span class="insert">(?) </span>to cope with both situations.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">2.  Terminology</td><td> </td><td class="right">2.  Terminology</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">2.1.  Requirements Language</td><td> </td><td class="right">2.1.  Requirements Language</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",</td><td> </td><td class="right">   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and</td><td> </td><td class="right">   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   "OPTIONAL" in this document are to be interpreted as described in BCP</td><td> </td><td class="right">   "OPTIONAL" in this document are to be interpreted as described in BCP</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   14 [RFC2119] [RFC8174] when, and only when, they appear in all</td><td> </td><td class="right">   14 [RFC2119] [RFC8174] when, and only when, they appear in all</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   capitals, as shown here.</td><td> </td><td class="right">   capitals, as shown here.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-5" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-5"><em> page 6, line 16<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-5"><em> page 6, line 16<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">      and</td><td> </td><td class="right">      and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  "Using RPI Option Type, Routing Header for Source Routes, and</td><td> </td><td class="right">   *  "Using RPI Option Type, Routing Header for Source Routes, and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      IPv6-in-IPv6 Encapsulation in the RPL Data Plane" [RFC9008].</td><td> </td><td class="right">      IPv6-in-IPv6 Encapsulation in the RPL Data Plane" [RFC9008].</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">2.3.  Glossary</td><td> </td><td class="right">2.3.  Glossary</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   This document uses the following acronyms:</td><td> </td><td class="right">   This document uses the following acronyms:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   6BBR   6LoWPAN Backbone Router</td><td> </td><td class="right">   6BBR   6LoWPAN Backbone Router</td><td class="lineno"></td></tr>
      <tr id="diff0009"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   6CIO   Capability Indication Option</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   6LBR   6LoWPAN Border Router</td><td> </td><td class="right">   6LBR   6LoWPAN Border Router</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   6LN    6LoWPAN Node</td><td> </td><td class="right">   6LN    6LoWPAN Node</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   6LR    6LoWPAN Router</td><td> </td><td class="right">   6LR    6LoWPAN Router</td><td class="lineno"></td></tr>
      <tr id="diff0010"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   <span class="delete">6CIO   Capability Indication Option</span></td><td> </td><td class="rblock">   <span class="insert">                                                                      </span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   AMC    Address Mapping Confirmation</td><td> </td><td class="right">   AMC    Address Mapping Confirmation</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   AMR    Address Mapping Request</td><td> </td><td class="right">   AMR    Address Mapping Request</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   ARO    Address Registration Option</td><td> </td><td class="right">   ARO    Address Registration Option</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   DAC    Duplicate Address Confirmation</td><td> </td><td class="right">   DAC    Duplicate Address Confirmation</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   DAD    Duplicate Address Detection</td><td> </td><td class="right">   DAD    Duplicate Address Detection</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   DAO    Destination Advertisement Object</td><td> </td><td class="right">   DAO    Destination Advertisement Object</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   DAR    Duplicate Address Request</td><td> </td><td class="right">   DAR    Duplicate Address Request</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   DIO    DODAG Information Object</td><td> </td><td class="right">   DIO    DODAG Information Object</td><td class="lineno"></td></tr>
      <tr id="diff0011"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   DODAG  Destination-Oriented Directed Acyclic Graph</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   EARO   Extended Address Registration Option</td><td> </td><td class="right">   EARO   Extended Address Registration Option</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   EDAC   Extended Duplicate Address Confirmation</td><td> </td><td class="right">   EDAC   Extended Duplicate Address Confirmation</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   EDAR   Extended Duplicate Address Request</td><td> </td><td class="right">   EDAR   Extended Duplicate Address Request</td><td class="lineno"></td></tr>
      <tr id="diff0012"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   <span class="delete">DODAG  Destination-Oriented Directed Acyclic Graph</span></td><td> </td><td class="rblock">   <span class="insert">                                                                      </span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   IR     Ingress Replication</td><td> </td><td class="right">   IR     Ingress Replication</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   LLN    Low-Power and Lossy Network</td><td> </td><td class="right">   LLN    Low-Power and Lossy Network</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   NA     Neighbor Advertisement</td><td> </td><td class="right">   NA     Neighbor Advertisement</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   NCE    Neighbor Cache Entry</td><td> </td><td class="right">   NCE    Neighbor Cache Entry</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   ND     Neighbor Discovery</td><td> </td><td class="right">   ND     Neighbor Discovery</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   NS     Neighbor Solicitation</td><td> </td><td class="right">   NS     Neighbor Solicitation</td><td class="lineno"></td></tr>
      <tr id="diff0013"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   <span class="delete">ROVR   Registration Ownership Verifier</span></td><td> </td><td class="rblock">                                                                         </td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   RTO    RPL Target Option</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   RA     Router Advertisement</td><td> </td><td class="right">   RA     Router Advertisement</td><td class="lineno"></td></tr>
      <tr id="diff0014"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   ROVR   Registration Ownership Verifier</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   RS     Router Solicitation</td><td> </td><td class="right">   RS     Router Solicitation</td><td class="lineno"></td></tr>
      <tr id="diff0015"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   RTO    RPL Target Option</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   TID    Transaction ID</td><td> </td><td class="right">   TID    Transaction ID</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   TIO    Transit Information Option</td><td> </td><td class="right">   TIO    Transit Information Option</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">2.4.  New terms</td><td> </td><td class="right">2.4.  New terms</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   This document introduces the following terms:</td><td> </td><td class="right">   This document introduces the following terms:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Origin  The node that issued an anycast or multicast advertisement,</td><td> </td><td class="right">   Origin  The node that issued an anycast or multicast advertisement,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">          either in the form of a NS(EARO) or as a DAO(TIO, RTO)</td><td> </td><td class="right">          either in the form of a NS(EARO) or as a DAO(TIO, RTO)</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Merge/merging  The action of receiving multiple anycast or multicast</td><td> </td><td class="right">   Merge/merging  The action of receiving multiple anycast or multicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">          advertisements, either internally from self, in the form of a</td><td> </td><td class="right">          advertisements, either internally from self, in the form of a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">          NS(EARO), or as a DAO(TIO, RTO), and generating a single</td><td> </td><td class="right">          NS(EARO), or as a DAO(TIO, RTO), and generating a single</td><td class="lineno"></td></tr>
      <tr id="diff0016"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">          DAO(TIO, RTO).  The 6RPL router maintains a state per origin</td><td> </td><td class="rblock">          DAO(TIO, RTO).  The 6RPL <span class="insert">(RPL?) </span>router maintains a state per origin</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">          for each advertised address, and merges the advertisements for</td><td> </td><td class="right">          for each advertised address, and merges the advertisements for</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">          all subscriptions for the same address in a single</td><td> </td><td class="right">          all subscriptions for the same address in a single</td><td class="lineno"></td></tr>
      <tr id="diff0017"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">          advertisement.  A RPL router that merges multicast</td><td> </td><td class="rblock">          advertisement.  A<span class="insert">n</span> RPL router that merges multicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">          advertisements from different origins becomes the origin of</td><td> </td><td class="right">          advertisements from different origins becomes the origin of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">          the merged advertisement and uses its own values for the Path</td><td> </td><td class="right">          the merged advertisement and uses its own values for the Path</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">          Sequence and Registration Ownership Verifier (ROVR) fields.</td><td> </td><td class="right">          Sequence and Registration Ownership Verifier (ROVR) fields.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Subscribe/subscription  The special form of registration that</td><td> </td><td class="right">   Subscribe/subscription  The special form of registration that</td><td class="lineno"></td></tr>
      <tr id="diff0018"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">          leverages NS(EARO) to register (subscribe) a multicast or an</td><td> </td><td class="rblock">          leverages NS(EARO) to register (subscribe<span class="insert"> for/to?</span>) a multicast or an</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">          anycast address.</td><td> </td><td class="right">          anycast address.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">3.  Overview</td><td> </td><td class="right">3.  Overview</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0019"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   This specification <span class="delete">E</span>xtends [RFC8505] and inherits from [RFC8928] to</td><td> </td><td class="rblock">   This specification <span class="insert">e</span>xtends [RFC8505] and inherits from [RFC8928] to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   provide a registration method - called subscription in this case -</td><td> </td><td class="right">   provide a registration method - called subscription in this case -</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   for anycast and multicast address.  [RFC8505] is agnostic to the</td><td> </td><td class="right">   for anycast and multicast address.  [RFC8505] is agnostic to the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   routing protocol in which the address may be redistributed.</td><td> </td><td class="right">   routing protocol in which the address may be redistributed.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   As opposed to unicast addresses, there might be multiple</td><td> </td><td class="right">   As opposed to unicast addresses, there might be multiple</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   registrations from multiple parties for the same address.  The router</td><td> </td><td class="right">   registrations from multiple parties for the same address.  The router</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   conserves one registration per party per multicast or anycast</td><td> </td><td class="right">   conserves one registration per party per multicast or anycast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   address, but injects the route into the routing protocol only once</td><td> </td><td class="right">   address, but injects the route into the routing protocol only once</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   for each address, asynchronously to the registration.  On the other</td><td> </td><td class="right">   for each address, asynchronously to the registration.  On the other</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   hand, the validation exchange with the registrar (6LBR) is still</td><td> </td><td class="right">   hand, the validation exchange with the registrar (6LBR) is still</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-6" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-6"><em> page 9, line 7<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-6"><em> page 9, line 7<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">            |        NA(EARO)  |               |</td><td> </td><td class="right">            |        NA(EARO)  |               |</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">            |&lt;-----------------|               |</td><td> </td><td class="right">            |&lt;-----------------|               |</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">                      ...</td><td> </td><td class="right">                      ...</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">            |                  |&lt;maintain route&gt; -&gt;</td><td> </td><td class="right">            |                  |&lt;maintain route&gt; -&gt;</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">                      ...</td><td> </td><td class="right">                      ...</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      Figure 1: Registration Flow for an anycast or multicast Address</td><td> </td><td class="right">      Figure 1: Registration Flow for an anycast or multicast Address</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   In classical networks, [RFC8505] may be used for an ND proxy</td><td> </td><td class="right">   In classical networks, [RFC8505] may be used for an ND proxy</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   operation as specified in [RFC8929], or redistributed in a full-</td><td> </td><td class="right">   operation as specified in [RFC8929], or redistributed in a full-</td><td class="lineno"></td></tr>
      <tr id="diff0020"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   fledged routing protocol such as <span class="delete">EVPN</span></td><td> </td><td class="rblock">   fledged routing protocol such as <span class="insert">Ethernet VPN</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   [I-D.thubert-bess-secure-evpn-mac-signaling] or RIFT</td><td> </td><td class="rblock">   [I-D.thubert-bess-secure-evpn-mac-signaling] or RIFT <span class="insert">(Routing In Fat Trees)</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [I-D.ietf-rift-rift].  The device mobility can be gracefully</td><td> </td><td class="right">   [I-D.ietf-rift-rift].  The device mobility can be gracefully</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   supported as long has the routers can exchange and make sense of the</td><td> </td><td class="right">   supported as long has the routers can exchange and make sense of the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   sequence counter in the TID field of the EARO.</td><td> </td><td class="right">   sequence counter in the TID field of the EARO.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   In the case of LLNs, RPL [RFC6550] is the routing protocol of choice</td><td> </td><td class="right">   In the case of LLNs, RPL [RFC6550] is the routing protocol of choice</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   and [RFC9010] specifies how the unicast address advertised with</td><td> </td><td class="right">   and [RFC9010] specifies how the unicast address advertised with</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [RFC8505] is redistributed in RPL.  This specification also provides</td><td> </td><td class="right">   [RFC8505] is redistributed in RPL.  This specification also provides</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   RPL extensions for anycast and multicast address operation and</td><td> </td><td class="right">   RPL extensions for anycast and multicast address operation and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   redistribution.  In the RPL case and unless specified otherwise, the</td><td> </td><td class="right">   redistribution.  In the RPL case and unless specified otherwise, the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   behavior of the 6LBR that acts as RPL Root, of the intermediate</td><td> </td><td class="right">   behavior of the 6LBR that acts as RPL Root, of the intermediate</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-7" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-7"><em> page 10, line 25<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-7"><em> page 10, line 25<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">    o  o  o   LLN  o   +---+</td><td> </td><td class="right">    o  o  o   LLN  o   +---+</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      o  o   o  o   o  |6LR|</td><td> </td><td class="right">      o  o   o  o   o  |6LR|</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      o o  o o   o     +---+</td><td> </td><td class="right">      o o  o o   o     +---+</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       o   o   o o o  o    z</td><td> </td><td class="right">       o   o   o o o  o    z</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      o  o oo o  o        +---+</td><td> </td><td class="right">      o  o oo o  o        +---+</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">             o            |6LN|</td><td> </td><td class="right">             o            |6LN|</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">                          +---+</td><td> </td><td class="right">                          +---+</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">                          Figure 2: Wireless Mesh</td><td> </td><td class="right">                          Figure 2: Wireless Mesh</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0021"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   A leaf acting as a 6LN registers its unicast addresses to a RPL</td><td> </td><td class="rblock">   A leaf acting as a 6LN registers its unicast addresses to a<span class="insert">n</span> RPL</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   router acting as a 6LR, using a layer-2 unicast NS message with an</td><td> </td><td class="right">   router acting as a 6LR, using a layer-2 unicast NS message with an</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   EARO as specified in [RFC8505].  The registration state is</td><td> </td><td class="right">   EARO as specified in [RFC8505].  The registration state is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   periodically renewed by the Registering Node, before the lifetime</td><td> </td><td class="right">   periodically renewed by the Registering Node, before the lifetime</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   indicated in the EARO expires.  As for unicast IPv6 addresses, the</td><td> </td><td class="right">   indicated in the EARO expires.  As for unicast IPv6 addresses, the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   6LR uses an EDAR/EDAC exchange with the 6LBR to notify the 6LBR of</td><td> </td><td class="right">   6LR uses an EDAR/EDAC exchange with the 6LBR to notify the 6LBR of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the presence of the listeners.</td><td> </td><td class="right">   the presence of the listeners.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   This specification updates the EARO with a new two-bit field, the</td><td> </td><td class="right">   This specification updates the EARO with a new two-bit field, the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   P-Field, as detailed in Section 7.1.  The existing R flag that</td><td> </td><td class="right">   P-Field, as detailed in Section 7.1.  The existing R flag that</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   requests reachability for the registered address gets new behavior.</td><td> </td><td class="right">   requests reachability for the registered address gets new behavior.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   With this extension the 6LNs can now subscribe to the anycast and</td><td> </td><td class="right">   With this extension the 6LNs can now subscribe to the anycast and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   multicast addresses they listen to, using a new P-Field in the EARO</td><td> </td><td class="right">   multicast addresses they listen to, using a new P-Field in the EARO</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   to signal that the registration is for a multicast address.  Multiple</td><td> </td><td class="right">   to signal that the registration is for a multicast address.  Multiple</td><td class="lineno"></td></tr>
      <tr id="diff0022"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   6LN<span class="delete"> may subscribe to</span> the same multicast address to the same 6LR.</td><td> </td><td class="rblock">   6LN<span class="insert">s may subscribe</span> the same multicast address to the same 6LR.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Note the use of the term "subscribe": using the EARO registration</td><td> </td><td class="right">   Note the use of the term "subscribe": using the EARO registration</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   mechanism, a node registers the unicast addresses that it owns, but</td><td> </td><td class="right">   mechanism, a node registers the unicast addresses that it owns, but</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   subscribes to the multicast addresses that it listens to.</td><td> </td><td class="right">   subscribes to the multicast addresses that it listens to.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   With this specification, the 6LNs can also subscribe the anycast</td><td> </td><td class="right">   With this specification, the 6LNs can also subscribe the anycast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   addresses they accept, using a new P-Field in the EARO to signal that</td><td> </td><td class="right">   addresses they accept, using a new P-Field in the EARO to signal that</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the registration is for an anycast address.  As for multicast,</td><td> </td><td class="right">   the registration is for an anycast address.  As for multicast,</td><td class="lineno"></td></tr>
      <tr id="diff0023"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   multiple 6LN may subscribe the same anycast address to the same 6LR.</td><td> </td><td class="rblock">   multiple 6LN<span class="insert">s</span> may subscribe the same anycast address to the same 6LR.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   If the R flag is set in the subscription of one or more 6LNs for the</td><td> </td><td class="right">   If the R flag is set in the subscription of one or more 6LNs for the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   same address, the 6LR injects the anycast addresses and multicast</td><td> </td><td class="right">   same address, the 6LR injects the anycast addresses and multicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   addresses of a scope larger than link-scope in RPL, based on the</td><td> </td><td class="right">   addresses of a scope larger than link-scope in RPL, based on the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   longest subscription lifetime across the active subscriptions for the</td><td> </td><td class="right">   longest subscription lifetime across the active subscriptions for the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   address.</td><td> </td><td class="right">   address.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   In the RPL "Storing Mode of Operation with multicast support", the</td><td> </td><td class="right">   In the RPL "Storing Mode of Operation with multicast support", the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   DAO messages for the multicast address percolate along the RPL</td><td> </td><td class="right">   DAO messages for the multicast address percolate along the RPL</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   preferred parent tree and mark a subtree that becomes the multicast</td><td> </td><td class="right">   preferred parent tree and mark a subtree that becomes the multicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   tree for that multicast address, with 6LNs that subscribed to the</td><td> </td><td class="right">   tree for that multicast address, with 6LNs that subscribed to the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   address as the leaves.  As prescribed in section 12 of [RFC6550], the</td><td> </td><td class="right">   address as the leaves.  As prescribed in section 12 of [RFC6550], the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   6LR forwards a multicast packet as an individual unicast MAC frame to</td><td> </td><td class="right">   6LR forwards a multicast packet as an individual unicast MAC frame to</td><td class="lineno"></td></tr>
      <tr id="diff0024"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   each peer along the multicast tree, except<span class="delete">ing</span> to the node it received</td><td> </td><td class="rblock">   each peer along the multicast tree, except to the node it received</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the packet from.</td><td> </td><td class="right">   the packet from.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   In the new RPL "Non-Storing Mode of Operation with multicast support"</td><td> </td><td class="right">   In the new RPL "Non-Storing Mode of Operation with multicast support"</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   that is introduced here, the DAO messages announce the multicast</td><td> </td><td class="right">   that is introduced here, the DAO messages announce the multicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   addresses as Targets though never as Transit.  The multicast</td><td> </td><td class="right">   addresses as Targets though never as Transit.  The multicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   distribution is an ingress replication whereby the Root encapsulates</td><td> </td><td class="right">   distribution is an ingress replication whereby the Root encapsulates</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the multicast packets to all the 6LRs that are transit for the</td><td> </td><td class="right">   the multicast packets to all the 6LRs that are transit for the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   multicast address, using the same source-routing header as for</td><td> </td><td class="right">   multicast address, using the same source-routing header as for</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   unicast targets attached to the respective 6LRs.</td><td> </td><td class="right">   unicast targets attached to the respective 6LRs.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-8" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-8"><em> page 11, line 48<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-8"><em> page 11, line 48<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   the Root maintains the list of all the RPL nodes that announced the</td><td> </td><td class="right">   the Root maintains the list of all the RPL nodes that announced the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   anycast address as Target, but forwards a given packet to only one of</td><td> </td><td class="right">   anycast address as Target, but forwards a given packet to only one of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   them.</td><td> </td><td class="right">   them.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Operationally speaking, deploying a new MOP means that one cannot</td><td> </td><td class="right">   Operationally speaking, deploying a new MOP means that one cannot</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   update a live network.  The network administrator must create a new</td><td> </td><td class="right">   update a live network.  The network administrator must create a new</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   instance with MoP 5 and migrate nodes to that instance by allowing</td><td> </td><td class="right">   instance with MoP 5 and migrate nodes to that instance by allowing</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   them to join it.</td><td> </td><td class="right">   them to join it.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   For backward compatibility, this specification allows to build a</td><td> </td><td class="right">   For backward compatibility, this specification allows to build a</td><td class="lineno"></td></tr>
      <tr id="diff0025"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   single DODAG signaled as MOP 1, that conveys anycast, <span class="delete">unicast</span> and</td><td> </td><td class="rblock">   single DODAG signaled as MOP 1, that conveys anycast, <span class="insert">unicast,</span> and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   multicast packets using the same source routing <span class="delete">mechanism,</span> more <span class="delete">in</span></td><td> </td><td class="rblock">   multicast packets using the same source routing <span class="insert">mechanism; for</span> more</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   Section 11.</td><td> </td><td class="rblock">   <span class="insert">please see</span> Section 11.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   It is also possible to leverage this specification between the 6LN</td><td> </td><td class="right">   It is also possible to leverage this specification between the 6LN</td><td class="lineno"></td></tr>
      <tr id="diff0026"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   and the 6LR for the registration of unicast, anycast and multicast</td><td> </td><td class="rblock">   and the 6LR for the registration of unicast, anycast<span class="insert">,</span> and multicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   IPv6 addresses in networks that are not necessarily LLNs, and/or</td><td> </td><td class="right">   IPv6 addresses in networks that are not necessarily LLNs, and/or</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   where the routing protocol between the 6LR and above is not</td><td> </td><td class="right">   where the routing protocol between the 6LR and above is not</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   necessarily RPL.  In that case, the distribution of packets between</td><td> </td><td class="right">   necessarily RPL.  In that case, the distribution of packets between</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the 6LR and the 6LNs may effectively rely on a broadcast or multicast</td><td> </td><td class="right">   the 6LR and the 6LNs may effectively rely on a broadcast or multicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   support at the lower layer, e.g., using this specification as a</td><td> </td><td class="right">   support at the lower layer, e.g., using this specification as a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   replacement to MLD in an Ethernet bridged domain and still using</td><td> </td><td class="right">   replacement to MLD in an Ethernet bridged domain and still using</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   either plain MAC-layer broadcast or snooping this protocol to control</td><td> </td><td class="right">   either plain MAC-layer broadcast or snooping this protocol to control</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the flooding.  It may also rely on overlay services to optimize the</td><td> </td><td class="right">   the flooding.  It may also rely on overlay services to optimize the</td><td class="lineno"></td></tr>
      <tr id="diff0027"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   impact of Broadcast, Unknown<span class="delete"> and Multicast (BUM) over a fabric, e.g.</span></td><td> </td><td class="rblock">   impact of Broadcast, Unknown<span class="insert">, and Multicast (BUM) over a fabric, e.g.,</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   registering with [I-D.thubert-bess-secure-evpn-mac-signaling] and</td><td> </td><td class="right">   registering with [I-D.thubert-bess-secure-evpn-mac-signaling] and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   forwarding with [I-D.ietf-bess-evpn-optimized-ir].</td><td> </td><td class="right">   forwarding with [I-D.ietf-bess-evpn-optimized-ir].</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0028"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   For instance, it is possible to operate a RPL Instance in the new</td><td> </td><td class="rblock">   For instance, it is possible to operate a<span class="insert">n</span> RPL Instance in the new</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   "Non-Storing Mode of Operation with multicast support" (while</td><td> </td><td class="right">   "Non-Storing Mode of Operation with multicast support" (while</td><td class="lineno"></td></tr>
      <tr id="diff0029"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   possibly signaling a MOP of 1) and use "Multicast Protocol for</td><td> </td><td class="rblock">   possibly signaling a<span class="insert">n</span> MOP of 1) and use "Multicast Protocol for</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Low-Power and Lossy Networks (MPL)" [RFC7731] for the multicast</td><td> </td><td class="right">   Low-Power and Lossy Networks (MPL)" [RFC7731] for the multicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   operation.  MPL floods the DODAG with the multicast messages</td><td> </td><td class="right">   operation.  MPL floods the DODAG with the multicast messages</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   independently of the RPL DODAG topologies.  Two variations are</td><td> </td><td class="right">   independently of the RPL DODAG topologies.  Two variations are</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   possible:</td><td> </td><td class="right">   possible:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  In one possible variation, all the 6LNs set the R flag in the EARO</td><td> </td><td class="right">   *  In one possible variation, all the 6LNs set the R flag in the EARO</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      for a multicast target, upon which the 6LRs send a unicast DAO</td><td> </td><td class="right">      for a multicast target, upon which the 6LRs send a unicast DAO</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      message to the Root; the Root filters out the multicast messages</td><td> </td><td class="right">      message to the Root; the Root filters out the multicast messages</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      for which there is no listener and only floods when there is.</td><td> </td><td class="right">      for which there is no listener and only floods when there is.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-9" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-9"><em> page 14, line 29<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-9"><em> page 14, line 29<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   if the origin is not determined (i.e., the origin did not support</td><td> </td><td class="right">   if the origin is not determined (i.e., the origin did not support</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   this specification).</td><td> </td><td class="right">   this specification).</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [RFC6550] uses the Path Lifetime in the TIO to indicate the remaining</td><td> </td><td class="right">   [RFC6550] uses the Path Lifetime in the TIO to indicate the remaining</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   time for which the advertisement is valid for unicast route</td><td> </td><td class="right">   time for which the advertisement is valid for unicast route</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   determination, and a Path Lifetime value of 0 invalidates that route.</td><td> </td><td class="right">   determination, and a Path Lifetime value of 0 invalidates that route.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [RFC9010] maps the Address Registration lifetime in the EARO and the</td><td> </td><td class="right">   [RFC9010] maps the Address Registration lifetime in the EARO and the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Path Lifetime in the TIO so they are comparable when both forms of</td><td> </td><td class="right">   Path Lifetime in the TIO so they are comparable when both forms of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   advertisements are received.</td><td> </td><td class="right">   advertisements are received.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0030"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   The RPL router that merges multiple advertisement for the same</td><td> </td><td class="rblock">   The RPL router that merges multiple advertisement<span class="insert">s</span> for the same</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   anycast or multicast addresses MUST use and advertise the longest</td><td> </td><td class="right">   anycast or multicast addresses MUST use and advertise the longest</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   remaining lifetime across all the origins of the advertisements for</td><td> </td><td class="right">   remaining lifetime across all the origins of the advertisements for</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   that address.  When the lifetime expires, the router sends a no-path</td><td> </td><td class="right">   that address.  When the lifetime expires, the router sends a no-path</td><td class="lineno"></td></tr>
      <tr id="diff0031"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   DAO (i.e. the lifetime is 0) using the same value for ROVR value as</td><td> </td><td class="rblock">   DAO (i.e.<span class="insert">,</span> the lifetime is 0) using the same value for ROVR value as</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   for the previous advertisements, that is either self or the single</td><td> </td><td class="right">   for the previous advertisements, that is either self or the single</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   descendant that advertised the Target.</td><td> </td><td class="right">   descendant that advertised the Target.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Note that the Registration Lifetime, TID and ROVR fields are also</td><td> </td><td class="right">   Note that the Registration Lifetime, TID and ROVR fields are also</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   placed in the EDAR message so the state created by EDAR is also</td><td> </td><td class="right">   placed in the EDAR message so the state created by EDAR is also</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   comparable with that created upon an NS(EARO) or a DAO message.  For</td><td> </td><td class="right">   comparable with that created upon an NS(EARO) or a DAO message.  For</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   simplicity the text below mentions only NS(EARO) but applies also to</td><td> </td><td class="right">   simplicity the text below mentions only NS(EARO) but applies also to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   EDAR.</td><td> </td><td class="right">   EDAR.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">6.1.  Updating MOP 3</td><td> </td><td class="right">6.1.  Updating MOP 3</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-10" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-10"><em> page 15, line 11<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-10"><em> page 15, line 11<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   MOP 3 is a storing Mode of Operation.  This operation builds a</td><td> </td><td class="right">   MOP 3 is a storing Mode of Operation.  This operation builds a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   multicast tree within the RPL DODAG for each multicast address.  This</td><td> </td><td class="right">   multicast tree within the RPL DODAG for each multicast address.  This</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   specification provides additional details for the MOP 3 operation.</td><td> </td><td class="right">   specification provides additional details for the MOP 3 operation.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The expectation in MOP 3 is that the unicast traffic also follows the</td><td> </td><td class="right">   The expectation in MOP 3 is that the unicast traffic also follows the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Storing Mode of Operation.  But this is rarely the case in LLN</td><td> </td><td class="right">   Storing Mode of Operation.  But this is rarely the case in LLN</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   deployments of RPL where the "Non-Storing Mode of Operation" (MOP 1)</td><td> </td><td class="right">   deployments of RPL where the "Non-Storing Mode of Operation" (MOP 1)</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   is the norm.  Though it is preferred to build separate RPL Instances,</td><td> </td><td class="right">   is the norm.  Though it is preferred to build separate RPL Instances,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   one in MOP 1 and one in MOP 3, this specification allows hybrid use</td><td> </td><td class="right">   one in MOP 1 and one in MOP 3, this specification allows hybrid use</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   of the Storing Mode for multicast and Non-Storing Mode for unicast in</td><td> </td><td class="right">   of the Storing Mode for multicast and Non-Storing Mode for unicast in</td><td class="lineno"></td></tr>
      <tr id="diff0032"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   the same RPL Instance, <span class="delete">more</span> in Section 11.</td><td> </td><td class="rblock">   the same RPL Instance, <span class="insert">as is elaborated in more detail</span> in Section 11.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   For anycast and multicast advertisements, including MOP 3, the ROVR</td><td> </td><td class="right">   For anycast and multicast advertisements, including MOP 3, the ROVR</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   field is placed in the RPL Target Option as specified in [RFC9010]</td><td> </td><td class="right">   field is placed in the RPL Target Option as specified in [RFC9010]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   for both MOP 3 and MOP 5 as it is for unicast advertisements.</td><td> </td><td class="right">   for both MOP 3 and MOP 5 as it is for unicast advertisements.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Though it was implicit with [RFC6550], this specification clarifies</td><td> </td><td class="right">   Though it was implicit with [RFC6550], this specification clarifies</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   that the freshness comparison based on the Path Sequence is not used</td><td> </td><td class="right">   that the freshness comparison based on the Path Sequence is not used</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   when the origin cannot be determined, which is the case there.  The</td><td> </td><td class="right">   when the origin cannot be determined, which is the case there.  The</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   comparison is to be used only between advertisements from the same</td><td> </td><td class="right">   comparison is to be used only between advertisements from the same</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   origin, which is either an individual subscriber, or a descendant</td><td> </td><td class="right">   origin, which is either an individual subscriber, or a descendant</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   that merged multiple advertisements.</td><td> </td><td class="right">   that merged multiple advertisements.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0033"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   A RPL router maintains a remaining Path Lifetime for each DAO that it</td><td> </td><td class="rblock">   A<span class="insert">n</span> RPL router maintains a remaining Path Lifetime for each DAO that it</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   receives for a multicast target, and sends its own DAO for that</td><td> </td><td class="right">   receives for a multicast target, and sends its own DAO for that</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   target with the longest remaining lifetime across its listening</td><td> </td><td class="right">   target with the longest remaining lifetime across its listening</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   children.  If the router has only one descendant listening, it</td><td> </td><td class="right">   children.  If the router has only one descendant listening, it</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   propagates the TID and ROVR as received.  Conversely, if the router</td><td> </td><td class="right">   propagates the TID and ROVR as received.  Conversely, if the router</td><td class="lineno"></td></tr>
      <tr id="diff0034"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   merges multiple advertisements (including possibly one for self as a</td><td> </td><td class="rblock">   merges multiple advertisements (including possibly one for <span class="insert">it</span>self as a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   listener), the router uses its own ROVR and TID values.</td><td> </td><td class="right">   listener), the router uses its own ROVR and TID values.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">6.2.  New Non-Storing Multicast MOP</td><td> </td><td class="right">6.2.  New Non-Storing Multicast MOP</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   This specification adds a "Non-Storing Mode of Operation with ingress</td><td> </td><td class="right">   This specification adds a "Non-Storing Mode of Operation with ingress</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   replication multicast support" (MOP to be assigned by IANA) whereby</td><td> </td><td class="right">   replication multicast support" (MOP to be assigned by IANA) whereby</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the non-storing Mode DAO to the Root may advertise a multicast</td><td> </td><td class="right">   the non-storing Mode DAO to the Root may advertise a multicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   address in the RPL Target Option (RTO), whereas the Transit</td><td> </td><td class="right">   address in the RPL Target Option (RTO), whereas the Transit</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Information Option (TIO) cannot.</td><td> </td><td class="right">   Information Option (TIO) cannot.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   In that mode, the RPL Root performs an ingress replication (IR)</td><td> </td><td class="right">   In that mode, the RPL Root performs an ingress replication (IR)</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   operation on the multicast packets, meaning that it transmits one</td><td> </td><td class="right">   operation on the multicast packets, meaning that it transmits one</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   copy of each multicast packet to each 6LR that is a transit for the</td><td> </td><td class="right">   copy of each multicast packet to each 6LR that is a transit for the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   multicast target, using the same source routing header and</td><td> </td><td class="right">   multicast target, using the same source routing header and</td><td class="lineno"></td></tr>
      <tr id="diff0035"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   encapsulation as it would for a unicast packet for a RPL Unaware Leaf</td><td> </td><td class="rblock">   encapsulation as it would for a unicast packet for a<span class="insert">n</span> RPL Unaware Leaf</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   (RUL) attached to that 6LR.</td><td> </td><td class="right">   (RUL) attached to that 6LR.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   For the intermediate routers, the packet appears as any source routed</td><td> </td><td class="right">   For the intermediate routers, the packet appears as any source routed</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   unicast packet.  The difference shows only at the 6LR, that</td><td> </td><td class="right">   unicast packet.  The difference shows only at the 6LR, that</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   terminates the source routed path and forwards the multicast packet</td><td> </td><td class="right">   terminates the source routed path and forwards the multicast packet</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   to all 6LNs that registered for the multicast address.</td><td> </td><td class="right">   to all 6LNs that registered for the multicast address.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   For a packet that is generated by the Root, this means that the Root</td><td> </td><td class="right">   For a packet that is generated by the Root, this means that the Root</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   builds a source routing header as shown in section 8.1.3 of</td><td> </td><td class="right">   builds a source routing header as shown in section 8.1.3 of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [RFC9008], but for which the last and only the last address is</td><td> </td><td class="right">   [RFC9008], but for which the last and only the last address is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-11" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-11"><em> page 16, line 26<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-11"><em> page 16, line 26<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   from the same origin, as determined by the same value in the ROVR</td><td> </td><td class="right">   from the same origin, as determined by the same value in the ROVR</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   field.</td><td> </td><td class="right">   field.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The Root maintains a remaining Path Lifetime for each advertisement</td><td> </td><td class="right">   The Root maintains a remaining Path Lifetime for each advertisement</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   it receives, and the 6LRs generate the DAO for multicast addresses</td><td> </td><td class="right">   it receives, and the 6LRs generate the DAO for multicast addresses</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   with the longest remaining lifetime across its registered 6LNs, using</td><td> </td><td class="right">   with the longest remaining lifetime across its registered 6LNs, using</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   its own ROVR and TID when multiple 6LNs subscribed, or if this 6LR is</td><td> </td><td class="right">   its own ROVR and TID when multiple 6LNs subscribed, or if this 6LR is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   one of the subscribers.</td><td> </td><td class="right">   one of the subscribers.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   For this new mode as well, this specification allows to enable the</td><td> </td><td class="right">   For this new mode as well, this specification allows to enable the</td><td class="lineno"></td></tr>
      <tr id="diff0036"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   operation in a MOP 1 brown field, more in Section 11.</td><td> </td><td class="rblock">   operation in a<span class="insert">n</span> MOP 1 brown field, more in Section 11.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">6.3.  RPL Anycast Operation</td><td> </td><td class="right">6.3.  RPL Anycast Operation</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   With multicast, the address has a recognizable format, and a</td><td> </td><td class="right">   With multicast, the address has a recognizable format, and a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   multicast packet is to be delivered to all the active subscribers.</td><td> </td><td class="right">   multicast packet is to be delivered to all the active subscribers.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   In contrast, the format of an anycast address is not distinguishable</td><td> </td><td class="right">   In contrast, the format of an anycast address is not distinguishable</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   from that of unicast.  A legacy node may issue a DAO message without</td><td> </td><td class="right">   from that of unicast.  A legacy node may issue a DAO message without</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   setting the P-Field to 2, the unicast behavior may apply to anycast</td><td> </td><td class="right">   setting the P-Field to 2, the unicast behavior may apply to anycast</td><td class="lineno"></td></tr>
      <tr id="diff0037"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   traffic in a subDAGs.  That message will be undistinguishable from a</td><td> </td><td class="rblock">   traffic in a subDAGs<span class="insert"> (?)</span>.  That message will be undistinguishable from a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   unicast advertisement and the anycast behavior in the dataplane can</td><td> </td><td class="right">   unicast advertisement and the anycast behavior in the dataplane can</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   only happen if all the nodes that advertise the same anycast address</td><td> </td><td class="right">   only happen if all the nodes that advertise the same anycast address</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   are synchronized with the same TID.  That way, the multiple paths can</td><td> </td><td class="right">   are synchronized with the same TID.  That way, the multiple paths can</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   remain in the RPL DODAG.</td><td> </td><td class="right">   remain in the RPL DODAG.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   With the P-Field set to 2, this specification alleviates the issue of</td><td> </td><td class="right">   With the P-Field set to 2, this specification alleviates the issue of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   synchronizing the TIDs and ROVR fields.  As for multicast, the</td><td> </td><td class="right">   synchronizing the TIDs and ROVR fields.  As for multicast, the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   freshness comparison based on the TID (in EARO) and the Path Sequence</td><td> </td><td class="right">   freshness comparison based on the TID (in EARO) and the Path Sequence</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   (in TIO) is ignored unless the messages have the same origin, as</td><td> </td><td class="right">   (in TIO) is ignored unless the messages have the same origin, as</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   inferred by the same ROVR in RTO and/or EARO, and the latest value of</td><td> </td><td class="right">   inferred by the same ROVR in RTO and/or EARO, and the latest value of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the lifetime is retained for each origin.</td><td> </td><td class="right">   the lifetime is retained for each origin.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0038"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   A RPL router that propagates an advertisement from a single origin</td><td> </td><td class="rblock">   A<span class="insert">n</span> RPL router that propagates an advertisement from a single origin</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   uses the ROVR and Path Sequence from that origin, whereas a router</td><td> </td><td class="right">   uses the ROVR and Path Sequence from that origin, whereas a router</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   that merges multiple subscriptions uses its own ROVR and Path</td><td> </td><td class="right">   that merges multiple subscriptions uses its own ROVR and Path</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Sequence and the longest lifetime over the different advertisements.</td><td> </td><td class="right">   Sequence and the longest lifetime over the different advertisements.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   A target is routed as anycast by a parent (or the Root) that received</td><td> </td><td class="right">   A target is routed as anycast by a parent (or the Root) that received</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   at least one DAO message for that target with the P-Field set to 2.</td><td> </td><td class="right">   at least one DAO message for that target with the P-Field set to 2.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   As opposed to multicast, the anycast operation described therein</td><td> </td><td class="right">   As opposed to multicast, the anycast operation described therein</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   applies to both addresses and prefixes, and the P-Field can be set to</td><td> </td><td class="right">   applies to both addresses and prefixes, and the P-Field can be set to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   2 for both.  An external destination (address or prefix) that may be</td><td> </td><td class="right">   2 for both.  An external destination (address or prefix) that may be</td><td class="lineno"></td></tr>
      <tr id="diff0039"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   injected as a RPL target from multiple border routers should be</td><td> </td><td class="rblock">   injected as a<span class="insert">n</span> RPL target from multiple border routers should be</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   injected as anycast in RPL to enable load balancing.  A mobile target</td><td> </td><td class="right">   injected as anycast in RPL to enable load balancing.  A mobile target</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   that is multihomed should in contrast be advertised as unicast over</td><td> </td><td class="right">   that is multihomed should in contrast be advertised as unicast over</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the multiple interfaces to favor the TID comparison and vs. the</td><td> </td><td class="right">   the multiple interfaces to favor the TID comparison and vs. the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   multipath load balancing.</td><td> </td><td class="right">   multipath load balancing.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   For either multicast and anycast, there can be multiple subscriptions</td><td> </td><td class="right">   For either multicast and anycast, there can be multiple subscriptions</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   from multiple origins, each using a different value of the ROVR field</td><td> </td><td class="right">   from multiple origins, each using a different value of the ROVR field</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   that identifies the individual subscription.  The 6LR maintains a</td><td> </td><td class="right">   that identifies the individual subscription.  The 6LR maintains a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   subscription state per value of the ROVR per multicast or anycast</td><td> </td><td class="right">   subscription state per value of the ROVR per multicast or anycast</td><td class="lineno"></td></tr>
      <tr id="diff0040"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   address, but inject the route into RPL only once for each address,</td><td> </td><td class="rblock">   address, but inject<span class="insert">s</span> the route into RPL only once for each address,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   and in the case of a multicast address, only if its scope is larger</td><td> </td><td class="right">   and in the case of a multicast address, only if its scope is larger</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   than link-scope (3 or more).  Since the subscriptions are considered</td><td> </td><td class="right">   than link-scope (3 or more).  Since the subscriptions are considered</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   separate, the check on the TID that acts as subscription sequence</td><td> </td><td class="right">   separate, the check on the TID that acts as subscription sequence</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   only applies to the subscription with the same ROVR.</td><td> </td><td class="right">   only applies to the subscription with the same ROVR.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0041"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   Like the 6LR, a RPL router in Storing Mode propagates the merged</td><td> </td><td class="rblock">   Like the 6LR, a<span class="insert">n</span> RPL router in Storing Mode propagates the merged</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   advertisement to its parent(s) in DAO messages once and only once for</td><td> </td><td class="right">   advertisement to its parent(s) in DAO messages once and only once for</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   each address, but it retains a routing table entry for each of the</td><td> </td><td class="right">   each address, but it retains a routing table entry for each of the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   children that advertised the address.</td><td> </td><td class="right">   children that advertised the address.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   When forwarding multicast packets down the DODAG, the RPL router</td><td> </td><td class="right">   When forwarding multicast packets down the DODAG, the RPL router</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   copies all the children that advertised the address in their DAO</td><td> </td><td class="right">   copies all the children that advertised the address in their DAO</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   messages.  In contrast, when forwarding anycast packets down the</td><td> </td><td class="right">   messages.  In contrast, when forwarding anycast packets down the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   DODAG, the RPL router MUST copy one and only one of the children that</td><td> </td><td class="right">   DODAG, the RPL router MUST copy one and only one of the children that</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   advertised the address in their DAO messages, and forward to one</td><td> </td><td class="right">   advertised the address in their DAO messages, and forward to one</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   parent if there is no such child.</td><td> </td><td class="right">   parent if there is no such child.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-12" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-12"><em> page 18, line 26<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-12"><em> page 18, line 26<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">                          Table 1: P-Field Values</td><td> </td><td class="right">                          Table 1: P-Field Values</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">6.5.  New RPL Target Option P-Field</td><td> </td><td class="right">6.5.  New RPL Target Option P-Field</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [RFC6550] recognizes a multicast address by its format (as specified</td><td> </td><td class="right">   [RFC6550] recognizes a multicast address by its format (as specified</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   in section 2.7 of [RFC4291]) and applies the specified multicast</td><td> </td><td class="right">   in section 2.7 of [RFC4291]) and applies the specified multicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   operation if the address is recognized as multicast.  This</td><td> </td><td class="right">   operation if the address is recognized as multicast.  This</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   specification updates [RFC6550] to add the 2-bit P-Field (see</td><td> </td><td class="right">   specification updates [RFC6550] to add the 2-bit P-Field (see</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Section 6.4) to the RTO to indicate that the target address is to be</td><td> </td><td class="right">   Section 6.4) to the RTO to indicate that the target address is to be</td><td class="lineno"></td></tr>
      <tr id="diff0042"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   processed as unicast, multicast or anycast.</td><td> </td><td class="rblock">   processed as unicast, multicast<span class="insert">,</span> or anycast.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  An RTO that has the P-Field set to 0 is called a unicast RTO.</td><td> </td><td class="right">   *  An RTO that has the P-Field set to 0 is called a unicast RTO.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  An RTO that has the P-Field set to 1 is called a multicast RTO.</td><td> </td><td class="right">   *  An RTO that has the P-Field set to 1 is called a multicast RTO.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  An RTO that has the P-Field set to 2 is called an anycast RTO.</td><td> </td><td class="right">   *  An RTO that has the P-Field set to 2 is called an anycast RTO.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The suggested position for the P-Field is 2 counting from 0 to 7 in</td><td> </td><td class="right">   The suggested position for the P-Field is 2 counting from 0 to 7 in</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   network order as shown in Figure 4, based on figure 4 of [RFC9010]</td><td> </td><td class="right">   network order as shown in Figure 4, based on figure 4 of [RFC9010]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   which defines the flags in position 0 and 1:</td><td> </td><td class="right">   which defines the flags in position 0 and 1:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-13" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-13"><em> page 19, line 31<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-13"><em> page 19, line 31<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">      multicast support that is extended in this specification for Non-</td><td> </td><td class="right">      multicast support that is extended in this specification for Non-</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      Storing Mode.</td><td> </td><td class="right">      Storing Mode.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  The P-Field is set to 2 to signal that the Registered Address is</td><td> </td><td class="right">   *  The P-Field is set to 2 to signal that the Registered Address is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      an anycast address.  When the P-Field is 2 and the R flag is 1,</td><td> </td><td class="right">      an anycast address.  When the P-Field is 2 and the R flag is 1,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      the 6LR that conforms to this specification injects the anycast</td><td> </td><td class="right">      the 6LR that conforms to this specification injects the anycast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      address in the routing protocol(s) that it participates to, e.g.,</td><td> </td><td class="right">      address in the routing protocol(s) that it participates to, e.g.,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      in the RPL anycast support that is introduced in this</td><td> </td><td class="right">      in the RPL anycast support that is introduced in this</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      specification for both Storing and Non-Storing Modes.</td><td> </td><td class="right">      specification for both Storing and Non-Storing Modes.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0043"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   Figure 5 illustrates the P-Field in its suggested position<span class="delete">s</span> (2,</td><td> </td><td class="rblock">   Figure 5 illustrates the P-Field in its suggested position (2,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   counting 0 to 7 in network order in the 8-bit array), to be confirmed</td><td> </td><td class="right">   counting 0 to 7 in network order in the 8-bit array), to be confirmed</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   by IANA.</td><td> </td><td class="right">   by IANA.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      0                   1                   2                   3</td><td> </td><td class="right">      0                   1                   2                   3</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1</td><td> </td><td class="right">      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</td><td> </td><td class="right">     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     |     Type      |     Length    |    Status     |    Opaque     |</td><td> </td><td class="right">     |     Type      |     Length    |    Status     |    Opaque     |</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</td><td> </td><td class="right">     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     |Rsv| P | I |R|T|     TID       |     Registration Lifetime     |</td><td> </td><td class="right">     |Rsv| P | I |R|T|     TID       |     Registration Lifetime     |</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</td><td> </td><td class="right">     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-14" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-14"><em> page 20, line 10<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-14"><em> page 20, line 10<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   New and updated Option Fields:</td><td> </td><td class="right">   New and updated Option Fields:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Rsv:  2-bit field; reserved, MUST be set to 0 and ignored by the</td><td> </td><td class="right">   Rsv:  2-bit field; reserved, MUST be set to 0 and ignored by the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      receiver</td><td> </td><td class="right">      receiver</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   P:  2-bit P-Field; see Section 6.4</td><td> </td><td class="right">   P:  2-bit P-Field; see Section 6.4</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">7.2.  Placing the New P-Field in the EDAR Message</td><td> </td><td class="right">7.2.  Placing the New P-Field in the EDAR Message</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Section 4 of [RFC6775] provides the same format for DAR and DAC</td><td> </td><td class="right">   Section 4 of [RFC6775] provides the same format for DAR and DAC</td><td class="lineno"></td></tr>
      <tr id="diff0044"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   messages but the status field is only used in DAC message and has to</td><td> </td><td class="rblock">   messages but the status field is only used in DAC message and has to<span class="insert"> be</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   set to zero in DAC messages.  [RFC8505] extends the DAC message as an</td><td> </td><td class="right">   set to zero in DAC messages.  [RFC8505] extends the DAC message as an</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   EDAC but does not change the status field in the EDAR.</td><td> </td><td class="right">   EDAC but does not change the status field in the EDAR.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   This specification repurposes the status field in the EDAR as a Flags</td><td> </td><td class="right">   This specification repurposes the status field in the EDAR as a Flags</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   field.  It adds a new P-Field to the EDAR flags field to match the</td><td> </td><td class="right">   field.  It adds a new P-Field to the EDAR flags field to match the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   P-Field in the EARO and signal the new types of registration.  The</td><td> </td><td class="right">   P-Field in the EARO and signal the new types of registration.  The</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   EDAC message is not modified.</td><td> </td><td class="right">   EDAC message is not modified.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Figure 6 illustrates the P-Field in its suggested position (0,</td><td> </td><td class="right">   Figure 6 illustrates the P-Field in its suggested position (0,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   counting 0 to 7 in network order in the 8-bit array), to be confirmed</td><td> </td><td class="right">   counting 0 to 7 in network order in the 8-bit array), to be confirmed</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-15" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-15"><em> page 21, line 18<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-15"><em> page 21, line 18<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  A router that expects to reboot may send a final RA message, upon</td><td> </td><td class="right">   *  A router that expects to reboot may send a final RA message, upon</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      which nodes should subscribe elsewhere or redo the subscription to</td><td> </td><td class="right">      which nodes should subscribe elsewhere or redo the subscription to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      the same router upon reboot.  In all other cases, a node reboot is</td><td> </td><td class="right">      the same router upon reboot.  In all other cases, a node reboot is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      silent.  When the node comes back to life, existing registration</td><td> </td><td class="right">      silent.  When the node comes back to life, existing registration</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      state might be lost if it was not persisted, e.g., in persistent</td><td> </td><td class="right">      state might be lost if it was not persisted, e.g., in persistent</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      memory.</td><td> </td><td class="right">      memory.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  Only unicast addresses can be registered.</td><td> </td><td class="right">   *  Only unicast addresses can be registered.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0045"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   *  The 6LN must register all its ULA and GUA with a NS(EARO).</td><td> </td><td class="rblock">   *  The 6LN must register all its ULA and GUA with a<span class="insert">n</span> NS(EARO).</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  The 6LN may set the R flag in the EARO to obtain return</td><td> </td><td class="right">   *  The 6LN may set the R flag in the EARO to obtain return</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      reachability services by the 6LR, e.g., through ND proxy</td><td> </td><td class="right">      reachability services by the 6LR, e.g., through ND proxy</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      operations, or by injecting the route in a route-over subnet.</td><td> </td><td class="right">      operations, or by injecting the route in a route-over subnet.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  the 6LR maintains a registration state per Registered Address,</td><td> </td><td class="right">   *  the 6LR maintains a registration state per Registered Address,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      including an NCE with the Link Layer Address (LLA) of the</td><td> </td><td class="right">      including an NCE with the Link Layer Address (LLA) of the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      Registered Node (the 6LN here).</td><td> </td><td class="right">      Registered Node (the 6LN here).</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   This specification adds the following behavior:</td><td> </td><td class="right">   This specification adds the following behavior:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-16" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-16"><em> page 21, line 47<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-16"><em> page 21, line 47<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  New ARO Statuses are introduced to indicate a "Registration</td><td> </td><td class="right">   *  New ARO Statuses are introduced to indicate a "Registration</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      Refresh Request" and an "Invalid Registration" (see Table 9).</td><td> </td><td class="right">      Refresh Request" and an "Invalid Registration" (see Table 9).</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      The former status is used in asynchronous NA(EARO) messages to</td><td> </td><td class="right">      The former status is used in asynchronous NA(EARO) messages to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      indicate to peer 6LNs that they are requested to reregister all</td><td> </td><td class="right">      indicate to peer 6LNs that they are requested to reregister all</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      addresses that were previously registered to the originating node.</td><td> </td><td class="right">      addresses that were previously registered to the originating node.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      The NA message may be sent to a unicast or a multicast link-scope</td><td> </td><td class="right">      The NA message may be sent to a unicast or a multicast link-scope</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      address and should be contained within the L2 range where nodes</td><td> </td><td class="right">      address and should be contained within the L2 range where nodes</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      may effectively have registered/subscribed to this router, e.g., a</td><td> </td><td class="right">      may effectively have registered/subscribed to this router, e.g., a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      radio broadcast domain.  The latter is generic to any error in the</td><td> </td><td class="right">      radio broadcast domain.  The latter is generic to any error in the</td><td class="lineno"></td></tr>
      <tr id="diff0046"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      EARO, and is used e.g., to report that the P-Field is not</td><td> </td><td class="rblock">      EARO, and is used<span class="insert">,</span> e.g., to report that the P-Field is not</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      consistent with the Registered Address in NS(EARO) and EDAR</td><td> </td><td class="right">      consistent with the Registered Address in NS(EARO) and EDAR</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      messages.</td><td> </td><td class="right">      messages.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      A device that wishes to refresh its state, e.g., upon reboot if it</td><td> </td><td class="right">      A device that wishes to refresh its state, e.g., upon reboot if it</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      may have lost some registration state, SHOULD send an asynchronous</td><td> </td><td class="right">      may have lost some registration state, SHOULD send an asynchronous</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      NA(EARO) with this new status value.  That asynchronous multicast</td><td> </td><td class="right">      NA(EARO) with this new status value.  That asynchronous multicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      NA(EARO) SHOULD be sent to the all-nodes link scope multicast</td><td> </td><td class="right">      NA(EARO) SHOULD be sent to the all-nodes link scope multicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      address (ff02::1) and Target MUST be set to the link local address</td><td> </td><td class="right">      address (ff02::1) and Target MUST be set to the link local address</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      that was exposed previously by this node to accept registrations.</td><td> </td><td class="right">      that was exposed previously by this node to accept registrations.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      The TID field in the multicast NA(EARO) is the one associated to</td><td> </td><td class="right">      The TID field in the multicast NA(EARO) is the one associated to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      the Target and follows the same rules as the TID in the NS(EARO)</td><td> </td><td class="right">      the Target and follows the same rules as the TID in the NS(EARO)</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      for the same Target, see section 5.2 of [RFC8505].  It is</td><td> </td><td class="right">      for the same Target, see section 5.2 of [RFC8505].  It is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      incremented by the sender each time it sends a new series of NS</td><td> </td><td class="right">      incremented by the sender each time it sends a new series of NS</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      and/or NA with the EARO about the Target.  By default the TID</td><td> </td><td class="right">      and/or NA with the EARO about the Target.  By default the TID</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      initial setting is 252.  The TID indicates a reboot when it is in</td><td> </td><td class="right">      initial setting is 252.  The TID indicates a reboot when it is in</td><td class="lineno"></td></tr>
      <tr id="diff0047"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      the "straight" part of the lollipop, between the initial value and</td><td> </td><td class="rblock">      the "straight" part of the lollipop<span class="insert">?</span>, between the initial value and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      255.  After that the TID remains below 128 as long as the device</td><td> </td><td class="right">      255.  After that the TID remains below 128 as long as the device</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      is alive.  An asynchronous multicast NA(EARO) with a TID below 128</td><td> </td><td class="right">      is alive.  An asynchronous multicast NA(EARO) with a TID below 128</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      MUST NOT be considered as indicating a reboot.</td><td> </td><td class="right">      MUST NOT be considered as indicating a reboot.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      In an unreliable environment, the asynchronous multicast NA(EARO)</td><td> </td><td class="right">      In an unreliable environment, the asynchronous multicast NA(EARO)</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      message MAY be resent in a fast sequence for reliability, in which</td><td> </td><td class="right">      message MAY be resent in a fast sequence for reliability, in which</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      case the TID MUST be incremented each time.  If the sender is a</td><td> </td><td class="right">      case the TID MUST be incremented each time.  If the sender is a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      6LN that also registers the Target to one or more 6LR(s), then it</td><td> </td><td class="right">      6LN that also registers the Target to one or more 6LR(s), then it</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      MUST reregister before the current value of the TID and the last</td><td> </td><td class="right">      MUST reregister before the current value of the TID and the last</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      registered value are no more comparable, see section 7.2 of</td><td> </td><td class="right">      registered value are no more comparable, see section 7.2 of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-17" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-17"><em> page 22, line 41<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-17"><em> page 22, line 41<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">      The multicast NA(EARO) SHOULD be resent enough times for the TID</td><td> </td><td class="right">      The multicast NA(EARO) SHOULD be resent enough times for the TID</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      to be issued with the value of 255 so the next NA(EARO) after the</td><td> </td><td class="right">      to be issued with the value of 255 so the next NA(EARO) after the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      initial series is outside the lollipop and not confused with a</td><td> </td><td class="right">      initial series is outside the lollipop and not confused with a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      reboot.  A 6LN that has recently processed the multicast NA(EARO)</td><td> </td><td class="right">      reboot.  A 6LN that has recently processed the multicast NA(EARO)</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      indicating "Registration Refresh Request" ignores the next</td><td> </td><td class="right">      indicating "Registration Refresh Request" ignores the next</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      multicast NA(EARO) with the same status and a newer TID received</td><td> </td><td class="right">      multicast NA(EARO) with the same status and a newer TID received</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      within the duration of the initial series.</td><td> </td><td class="right">      within the duration of the initial series.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      By default, the duration of the initial series is 10 seconds, the</td><td> </td><td class="right">      By default, the duration of the initial series is 10 seconds, the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      interval between retries is 1 second, and the number of retries is</td><td> </td><td class="right">      interval between retries is 1 second, and the number of retries is</td><td class="lineno"></td></tr>
      <tr id="diff0048"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      3.  The best values for the duration, the number of retries and</td><td> </td><td class="rblock">      3.  The best values for the duration, the number of retries<span class="insert">,</span> and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      the TID initial setting depend on the environment and SHOULD be</td><td> </td><td class="right">      the TID initial setting depend on the environment and SHOULD be</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      configurable.</td><td> </td><td class="right">      configurable.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  A new IPv6 ND Consistent Uptime option (CUO) is introduced to be</td><td> </td><td class="right">   *  A new IPv6 ND Consistent Uptime option (CUO) is introduced to be</td><td class="lineno"></td></tr>
      <tr id="diff0049"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      placed in IPv6 ND messages.  The CUO indicates allows to figure</td><td> </td><td class="rblock">      placed in IPv6 ND messages.  The CUO indicates allows<span class="insert">?</span> to figure</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      the state consistency between the sender and the receiver.  For</td><td> </td><td class="right">      the state consistency between the sender and the receiver.  For</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      instance, a node that rebooted needs to reset its uptime to 0.  A</td><td> </td><td class="right">      instance, a node that rebooted needs to reset its uptime to 0.  A</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      Router that changed information like a prefix information option</td><td> </td><td class="right">      Router that changed information like a prefix information option</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      has to advertise an incremented state sequence.  To that effect,</td><td> </td><td class="right">      has to advertise an incremented state sequence.  To that effect,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      the CUO carries a Node State Sequence Information (NSSI) and a</td><td> </td><td class="right">      the CUO carries a Node State Sequence Information (NSSI) and a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      Consistent Uptime.  See Section 10 for the option details.</td><td> </td><td class="right">      Consistent Uptime.  See Section 10 for the option details.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      A node that receives the CUO checks whether it is indicative of a</td><td> </td><td class="right">      A node that receives the CUO checks whether it is indicative of a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      desynchronization between peers.  A peer that discovers that a</td><td> </td><td class="right">      desynchronization between peers.  A peer that discovers that a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      router has changed should reassess which addresses it formed based</td><td> </td><td class="right">      router has changed should reassess which addresses it formed based</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      on the new PIOs from that router, and resync the state that it</td><td> </td><td class="right">      on the new PIOs from that router, and resync the state that it</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      installed in the router, e.g., the registration state for its</td><td> </td><td class="right">      installed in the router, e.g., the registration state for its</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      addresses.  In the process, the peer may attempt to form new</td><td> </td><td class="right">      addresses.  In the process, the peer may attempt to form new</td><td class="lineno"></td></tr>
      <tr id="diff0050"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      address and register them, deprecate old addresses and deregister</td><td> </td><td class="rblock">      address<span class="insert">es</span> and register them, deprecate old addresses and deregister</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      them using a Lifetime of 0, and reform any potentially lost state,</td><td> </td><td class="right">      them using a Lifetime of 0, and reform any potentially lost state,</td><td class="lineno"></td></tr>
      <tr id="diff0051"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      e.g., by re-registering an existing address that it will keep</td><td> </td><td class="rblock">      e.g., by re-registering <span class="insert">(reregistering?) </span>an existing address that it will keep</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      using.  A loss of state is inferred if the Consistent Uptime of</td><td> </td><td class="right">      using.  A loss of state is inferred if the Consistent Uptime of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      the peer is less than the time since the state was installed, or</td><td> </td><td class="right">      the peer is less than the time since the state was installed, or</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      the NSSI is incremented for a consistent uptime.</td><td> </td><td class="right">      the NSSI is incremented for a consistent uptime.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  Registration for multicast and anycast addresses is now supported.</td><td> </td><td class="right">   *  Registration for multicast and anycast addresses is now supported.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      The P-Field is added to the EARO to signal when the registered</td><td> </td><td class="right">      The P-Field is added to the EARO to signal when the registered</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      address is anycast or multicast.  If the value of the P-Field is</td><td> </td><td class="right">      address is anycast or multicast.  If the value of the P-Field is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      not consistent with the Registered Address, e.g., the Registered</td><td> </td><td class="right">      not consistent with the Registered Address, e.g., the Registered</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      Address is a multicast address (section 2.4 of [RFC4291]) and the</td><td> </td><td class="right">      Address is a multicast address (section 2.4 of [RFC4291]) and the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      P-Field indicates a value that is not 1, or the other way around,</td><td> </td><td class="right">      P-Field indicates a value that is not 1, or the other way around,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-18" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-18"><em> page 24, line 28<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-18"><em> page 24, line 28<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [RFC9010] specifies the following behaviours:</td><td> </td><td class="right">   [RFC9010] specifies the following behaviours:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  The 6LR injects only unicast routes in RPL</td><td> </td><td class="right">   *  The 6LR injects only unicast routes in RPL</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  Upon a registration with the R flag set to 1 in the EARO, the 6LR</td><td> </td><td class="right">   *  Upon a registration with the R flag set to 1 in the EARO, the 6LR</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      injects the address in the RPL unicast support.</td><td> </td><td class="right">      injects the address in the RPL unicast support.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  Upon receiving a packet directed to a unicast address for which it</td><td> </td><td class="right">   *  Upon receiving a packet directed to a unicast address for which it</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      has an active registration, the 6LR delivers the packet as a</td><td> </td><td class="right">      has an active registration, the 6LR delivers the packet as a</td><td class="lineno"></td></tr>
      <tr id="diff0052"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      unicast layer-2 frame to the LLA the nodes that registered the</td><td> </td><td class="rblock">      unicast layer-2 frame to the LLA <span class="insert">of </span>the nodes that registered the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      unicast address.</td><td> </td><td class="right">      unicast address.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   This specification adds the following behavior:</td><td> </td><td class="right">   This specification adds the following behavior:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  Upon a subscription with the R flag and the P-Field both set to 1</td><td> </td><td class="right">   *  Upon a subscription with the R flag and the P-Field both set to 1</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      in the EARO, if the scope of the multicast address is above link-</td><td> </td><td class="right">      in the EARO, if the scope of the multicast address is above link-</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      scope [RFC7346], then the 6LR injects the address in the RPL</td><td> </td><td class="right">      scope [RFC7346], then the 6LR injects the address in the RPL</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      multicast support and sets the P field in the RTO to 1 as well.</td><td> </td><td class="right">      multicast support and sets the P field in the RTO to 1 as well.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  Upon a subscription with the R set to 1 and the P-Field set to 2</td><td> </td><td class="right">   *  Upon a subscription with the R set to 1 and the P-Field set to 2</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      in the EARO, the 6LR injects the address in the new RPL anycast</td><td> </td><td class="right">      in the EARO, the 6LR injects the address in the new RPL anycast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      support and sets the P-Field to 2 in the RTO.</td><td> </td><td class="right">      support and sets the P-Field to 2 in the RTO.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  Upon receiving a packet directed to a multicast address for which</td><td> </td><td class="right">   *  Upon receiving a packet directed to a multicast address for which</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      it has at least one subscription, the 6LR delivers a copy of the</td><td> </td><td class="right">      it has at least one subscription, the 6LR delivers a copy of the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      packet as a unicast layer-2 frame to the LLA of each of the nodes</td><td> </td><td class="right">      packet as a unicast layer-2 frame to the LLA of each of the nodes</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      that registered to that multicast address.</td><td> </td><td class="right">      that registered to that multicast address.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0053"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   *  Upon receiving a packet directed to a anycast address for which it</td><td> </td><td class="rblock">   *  Upon receiving a packet directed to a<span class="insert">n</span> anycast address for which it</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      has at least one subscription, the 6LR delivers a copy of the</td><td> </td><td class="right">      has at least one subscription, the 6LR delivers a copy of the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      packet as a unicast layer-2 frame to the LLA of exactly one of the</td><td> </td><td class="right">      packet as a unicast layer-2 frame to the LLA of exactly one of the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      nodes that registered to that multicast address.</td><td> </td><td class="right">      nodes that registered to that multicast address.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">9.  Leveraging RFC 8928</td><td> </td><td class="right">9.  Leveraging RFC 8928</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Address-Protected Neighbor Discovery for Low-Power and Lossy Networks</td><td> </td><td class="right">   Address-Protected Neighbor Discovery for Low-Power and Lossy Networks</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [RFC8928] was defined to protect the ownership of unicast IPv6</td><td> </td><td class="right">   [RFC8928] was defined to protect the ownership of unicast IPv6</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   addresses that are registered with [RFC8505].</td><td> </td><td class="right">   addresses that are registered with [RFC8505].</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-19" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-19"><em> page 25, line 22<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-19"><em> page 25, line 22<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   public and private keys and use them to sign the registration of</td><td> </td><td class="right">   public and private keys and use them to sign the registration of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   addresses that are either autoconfigured or obtained through other</td><td> </td><td class="right">   addresses that are either autoconfigured or obtained through other</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   methods.</td><td> </td><td class="right">   methods.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The first hop router (the 6LR) may then validate a registration and</td><td> </td><td class="right">   The first hop router (the 6LR) may then validate a registration and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   perform source address validation on packets coming from the sender</td><td> </td><td class="right">   perform source address validation on packets coming from the sender</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   node (the 6LN).</td><td> </td><td class="right">   node (the 6LN).</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Anycast and multicast addresses are not owned by one node.  Multiple</td><td> </td><td class="right">   Anycast and multicast addresses are not owned by one node.  Multiple</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   nodes may subscribe to the same address.  Also, anycast and multicast</td><td> </td><td class="right">   nodes may subscribe to the same address.  Also, anycast and multicast</td><td class="lineno"></td></tr>
      <tr id="diff0054"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   addresses are not used to source traffic.  In that context, the</td><td> </td><td class="rblock">   addresses are not used to <span class="insert">(for?) </span>source traffic.  In that context, the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   method specified in [RFC8928] cannot be used with autoconfigured</td><td> </td><td class="right">   method specified in [RFC8928] cannot be used with autoconfigured</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   keypairs to protect a single ownership.</td><td> </td><td class="right">   keypairs to protect a single ownership.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   For an anycast or a multicast address, it is still possible to</td><td> </td><td class="right">   For an anycast or a multicast address, it is still possible to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   leverage [RFC8928] to enforce the right to subscribe.  If [RFC8928]</td><td> </td><td class="right">   leverage [RFC8928] to enforce the right to subscribe.  If [RFC8928]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   is used, a keypair MUST be associated with the address before it is</td><td> </td><td class="right">   is used, a keypair MUST be associated with the address before it is</td><td class="lineno"></td></tr>
      <tr id="diff0055"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   deployed, and a ROVR MUST be generated from that keypair as specified</td><td> </td><td class="rblock">   deployed, and a<span class="insert">n</span> ROVR MUST be generated from that keypair as specified</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   in [RFC8928].  The address and the ROVR MUST then be installed in the</td><td> </td><td class="right">   in [RFC8928].  The address and the ROVR MUST then be installed in the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   6LBR so it can recognize the address and compare the ROVR on the</td><td> </td><td class="right">   6LBR so it can recognize the address and compare the ROVR on the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   first subscription.</td><td> </td><td class="right">   first subscription.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The keypair MUST then be provisioned in each node that needs to</td><td> </td><td class="right">   The keypair MUST then be provisioned in each node that needs to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   subscribe to the anycast or multicast address, so the node can follow</td><td> </td><td class="right">   subscribe to the anycast or multicast address, so the node can follow</td><td class="lineno"></td></tr>
      <tr id="diff0056"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   the steps in [RFC8928] to subscribe the address.</td><td> </td><td class="rblock">   the steps in [RFC8928] to subscribe <span class="insert">(to?) </span>the address.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">10.  Consistent Uptime Option</td><td> </td><td class="right">10.  Consistent Uptime Option</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   This specification introduces a new option that characterizes the</td><td> </td><td class="right">   This specification introduces a new option that characterizes the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   uptime of the sender.  The option may be used by routers in RA</td><td> </td><td class="right">   uptime of the sender.  The option may be used by routers in RA</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   messages and by any node in NS, NA, and RS messages.  It is used by</td><td> </td><td class="right">   messages and by any node in NS, NA, and RS messages.  It is used by</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the receiver to infer whether some state synchronization might be</td><td> </td><td class="right">   the receiver to infer whether some state synchronization might be</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   lost, e.g., due to reboot.</td><td> </td><td class="right">   lost, e.g., due to reboot.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      0                   1                   2                   3</td><td> </td><td class="right">      0                   1                   2                   3</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-20" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-20"><em> page 26, line 45<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-20"><em> page 26, line 45<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   continuously up and running (though possibly sleeping) without loss</td><td> </td><td class="right">   continuously up and running (though possibly sleeping) without loss</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   of state.  It is expressed by the Uptime Mantissa in units of 2 at</td><td> </td><td class="right">   of state.  It is expressed by the Uptime Mantissa in units of 2 at</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the power of the Uptime Exponent milliseconds.  The receiver derives</td><td> </td><td class="right">   the power of the Uptime Exponent milliseconds.  The receiver derives</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the boot time of the sender as the current Epoch minus the sender's</td><td> </td><td class="right">   the boot time of the sender as the current Epoch minus the sender's</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Consistent Uptime.</td><td> </td><td class="right">   Consistent Uptime.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   If the boot time of the sender is updated to a newer time, any state</td><td> </td><td class="right">   If the boot time of the sender is updated to a newer time, any state</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   that was installed in the sender MUST be reassessed and reinstalled</td><td> </td><td class="right">   that was installed in the sender MUST be reassessed and reinstalled</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   if it is missing but still needed.  The U flag not set in a unicast</td><td> </td><td class="right">   if it is missing but still needed.  The U flag not set in a unicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   message from the sender indicates that it has lost all state from</td><td> </td><td class="right">   message from the sender indicates that it has lost all state from</td><td class="lineno"></td></tr>
      <tr id="diff0057"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   this node.  If the U flag is set, the the Peer NSSI field can be used</td><td> </td><td class="rblock">   this node.  If the U flag is set, the<span class="insert">n</span> the Peer NSSI field can be used</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   to assess which changes the sender missed.  The other way around, any</td><td> </td><td class="right">   to assess which changes the sender missed.  The other way around, any</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   state that was installed in the receiver from information by the</td><td> </td><td class="right">   state that was installed in the receiver from information by the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   sender before it rebooted MUST be removed and may or may not be</td><td> </td><td class="right">   sender before it rebooted MUST be removed and may or may not be</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   reinstalled later.</td><td> </td><td class="right">   reinstalled later.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The value if the uptime is reset to 0 at some point of the sender's</td><td> </td><td class="right">   The value if the uptime is reset to 0 at some point of the sender's</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   reboot sequence, but may not be still 0 when the first message is</td><td> </td><td class="right">   reboot sequence, but may not be still 0 when the first message is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   sent, so the receiver must not expect a value of 0 as the signal of a</td><td> </td><td class="right">   sent, so the receiver must not expect a value of 0 as the signal of a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   reboot.</td><td> </td><td class="right">   reboot.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-21" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-21"><em> page 27, line 26<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-21"><em> page 27, line 26<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">             +----------+----------+------------+-----------+</td><td> </td><td class="right">             +----------+----------+------------+-----------+</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">             | 2        | 15       | 30s        | 1mn       |</td><td> </td><td class="right">             | 2        | 15       | 30s        | 1mn       |</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">             +----------+----------+------------+-----------+</td><td> </td><td class="right">             +----------+----------+------------+-----------+</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">             | 2        | 21       | 33mn       | 1 hour    |</td><td> </td><td class="right">             | 2        | 21       | 33mn       | 1 hour    |</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">             +----------+----------+------------+-----------+</td><td> </td><td class="right">             +----------+----------+------------+-----------+</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">                 Table 2: Consistent Uptime Rough Values</td><td> </td><td class="right">                 Table 2: Consistent Uptime Rough Values</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The NSSI SHOULD be stored in persistent memory by the sender and</td><td> </td><td class="right">   The NSSI SHOULD be stored in persistent memory by the sender and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   incremented when it may have missed or lost state about a peer, or</td><td> </td><td class="right">   incremented when it may have missed or lost state about a peer, or</td><td class="lineno"></td></tr>
      <tr id="diff0058"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   has updated some state in a fashion that will <span class="delete">that </span>impact a peer,</td><td> </td><td class="rblock">   has updated some state in a fashion that will impact a peer,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   e.g., a host formed a new address or a router advertises a new</td><td> </td><td class="right">   e.g., a host formed a new address or a router advertises a new</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   prefix.  When persisting is not possible, then the NSSI is randomly</td><td> </td><td class="right">   prefix.  When persisting is not possible, then the NSSI is randomly</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   generated.</td><td> </td><td class="right">   generated.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Any change in the value of the NSSI from a node is an indication that</td><td> </td><td class="right">   Any change in the value of the NSSI from a node is an indication that</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the node updated some state and that the needful state should be</td><td> </td><td class="right">   the node updated some state and that the needful state should be</td><td class="lineno"></td></tr>
      <tr id="diff0059"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   reinstalled, e.g., addresses that <span class="delete">where</span> formed based on an RA with a</td><td> </td><td class="rblock">   reinstalled, e.g., addresses that <span class="insert">were</span> formed based on an RA with a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   previous NSSI should be reassessed, and the registration state</td><td> </td><td class="rblock">   previous NSSI should be reassessed, and the registration state <span class="insert">should be</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   updated in the peer.</td><td> </td><td class="right">   updated in the peer.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">11.  Operational considerations</td><td> </td><td class="right">11.  Operational considerations</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0060"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   With this specification, <span class="delete">a</span> RPL DODAG forms a realm, and multiple RPL</td><td> </td><td class="rblock">   With this specification, <span class="insert">an</span> RPL DODAG forms a realm, and multiple RPL</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   DODAGs may federated in a single RPL Instance administratively.  This</td><td> </td><td class="rblock">   DODAGs may <span class="insert">be</span> federated in a single RPL Instance administratively.  This</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   means that a multicast address that needs to span <span class="delete">a</span> RPL DODAG MUST</td><td> </td><td class="rblock">   means that a multicast address that needs to span <span class="insert">an</span> RPL DODAG MUST</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   use a scope of Realm-Local whereas a multicast address that needs to</td><td> </td><td class="right">   use a scope of Realm-Local whereas a multicast address that needs to</td><td class="lineno"></td></tr>
      <tr id="diff0061"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   span a RPL Instance MUST use a scope of Admin-Local as discussed in</td><td> </td><td class="rblock">   span a<span class="insert">n</span> RPL Instance MUST use a scope of Admin-Local as discussed in</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   section 3 of "IPv6 Multicast Address Scopes" [RFC7346].</td><td> </td><td class="right">   section 3 of "IPv6 Multicast Address Scopes" [RFC7346].</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   "IPv6 Addressing of IPv4/IPv6 Translators" [RFC6052] enables to embed</td><td> </td><td class="right">   "IPv6 Addressing of IPv4/IPv6 Translators" [RFC6052] enables to embed</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   IPv4 addresses in IPv6 addresses.  The Root of a DODAG may leverage</td><td> </td><td class="right">   IPv4 addresses in IPv6 addresses.  The Root of a DODAG may leverage</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   that technique to translate IPv4 traffic in IPv6 and route along the</td><td> </td><td class="right">   that technique to translate IPv4 traffic in IPv6 and route along the</td><td class="lineno"></td></tr>
      <tr id="diff0062"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   RPL domain.  When encapsulating a<span class="delete">n</span> packet with an IPv4 multicast</td><td> </td><td class="rblock">   RPL domain.  When encapsulating a packet with an IPv4 multicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Destination Address, it MUST use a multicast address with the</td><td> </td><td class="right">   Destination Address, it MUST use a multicast address with the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   appropriate scope, Realm-Local or Admin-Local.</td><td> </td><td class="right">   appropriate scope, Realm-Local or Admin-Local.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   "Unicast-Prefix-based IPv6 Multicast Addresses" [RFC3306] enables to</td><td> </td><td class="right">   "Unicast-Prefix-based IPv6 Multicast Addresses" [RFC3306] enables to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   form 2^32 multicast addresses from a single /64 prefix.  If an IPv6</td><td> </td><td class="right">   form 2^32 multicast addresses from a single /64 prefix.  If an IPv6</td><td class="lineno"></td></tr>
      <tr id="diff0063"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   prefix is associated to an Instance or a RPL DODAG, this provides a</td><td> </td><td class="rblock">   prefix is associated to an Instance or a<span class="insert">n</span> RPL DODAG, this provides a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   namespace that can be used in any desired fashion.  It is for</td><td> </td><td class="right">   namespace that can be used in any desired fashion.  It is for</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   instance possible for a standard defining organization to form its</td><td> </td><td class="right">   instance possible for a standard defining organization to form its</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   own registry and allocate 32-bit values from that namespace to</td><td> </td><td class="right">   own registry and allocate 32-bit values from that namespace to</td><td class="lineno"></td></tr>
      <tr id="diff0064"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   network functions or device types.  When used within a RPL deployment</td><td> </td><td class="rblock">   network functions or device types.  When used within a<span class="insert">n</span> RPL deployment</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   that is associated with a /64 prefix the IPv6 multicast addresses can</td><td> </td><td class="right">   that is associated with a /64 prefix the IPv6 multicast addresses can</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   be automatically derived from the prefix and the 32-bit value for</td><td> </td><td class="right">   be automatically derived from the prefix and the 32-bit value for</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   either a Realm-Local or an Admin-Local multicast address as needed in</td><td> </td><td class="right">   either a Realm-Local or an Admin-Local multicast address as needed in</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the configuration.</td><td> </td><td class="right">   the configuration.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   This specification introduces the new RPL MoP 5.  Operationally</td><td> </td><td class="right">   This specification introduces the new RPL MoP 5.  Operationally</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   speaking, deploying a new RPL MoP means that one cannot update a live</td><td> </td><td class="right">   speaking, deploying a new RPL MoP means that one cannot update a live</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   network.  The network administrator must create a new instance with</td><td> </td><td class="right">   network.  The network administrator must create a new instance with</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   MoP 5 and migrate nodes to that instance by allowing them to join it.</td><td> </td><td class="right">   MoP 5 and migrate nodes to that instance by allowing them to join it.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   In a "green field" deployment where all nodes support this</td><td> </td><td class="right">   In a "green field" deployment where all nodes support this</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   specification, it is possible to deploy a single RPL Instance using a</td><td> </td><td class="right">   specification, it is possible to deploy a single RPL Instance using a</td><td class="lineno"></td></tr>
      <tr id="diff0065"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   multicast MOP for unicast, multicast and anycast addresses.</td><td> </td><td class="rblock">   multicast MOP for unicast, multicast<span class="insert">,</span> and anycast addresses.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   In a "brown field" where legacy devices that do not support this</td><td> </td><td class="right">   In a "brown field" where legacy devices that do not support this</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   specification co-exist with upgraded devices, it is RECOMMENDED to</td><td> </td><td class="right">   specification co-exist with upgraded devices, it is RECOMMENDED to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   deploy one RPL Instance in any Mode of Operation (typically MOP 1)</td><td> </td><td class="right">   deploy one RPL Instance in any Mode of Operation (typically MOP 1)</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   for unicast that legacy nodes can join, and a separate RPL Instance</td><td> </td><td class="right">   for unicast that legacy nodes can join, and a separate RPL Instance</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   dedicated to multicast and anycast operations using a multicast MOP.</td><td> </td><td class="right">   dedicated to multicast and anycast operations using a multicast MOP.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0066"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   To deploy a Storing Mode multicast operation using MOP 3 in a RPL</td><td> </td><td class="rblock">   To deploy a Storing Mode multicast operation using MOP 3 in a<span class="insert">n</span> RPL</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   domain, it is required that there is enough density of RPL routers</td><td> </td><td class="right">   domain, it is required that there is enough density of RPL routers</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   that support MOP 3 to build a DODAG that covers all the potential</td><td> </td><td class="right">   that support MOP 3 to build a DODAG that covers all the potential</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   listeners and include the spanning multicast trees that are needed to</td><td> </td><td class="right">   listeners and include the spanning multicast trees that are needed to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   distribute the multicast flows.  This might not be the case when</td><td> </td><td class="right">   distribute the multicast flows.  This might not be the case when</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   extending the capabilities of an existing network.</td><td> </td><td class="right">   extending the capabilities of an existing network.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   In the case of the new Non-Storing multicast MOP, arguably the new</td><td> </td><td class="right">   In the case of the new Non-Storing multicast MOP, arguably the new</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   support is only needed at the 6LRs that will accept multicast</td><td> </td><td class="right">   support is only needed at the 6LRs that will accept multicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   listeners.  It is still required that each listener can reach at</td><td> </td><td class="right">   listeners.  It is still required that each listener can reach at</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   least one such 6LR, so the upgraded 6LRs must be deployed to cover</td><td> </td><td class="right">   least one such 6LR, so the upgraded 6LRs must be deployed to cover</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-22" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-22"><em> page 29, line 18<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-22"><em> page 29, line 18<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   more multiple instances.</td><td> </td><td class="right">   more multiple instances.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   When using a single RPL Instance, MOP 3 expects the Storing Mode of</td><td> </td><td class="right">   When using a single RPL Instance, MOP 3 expects the Storing Mode of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Operation for both unicast and multicast, which is an issue in</td><td> </td><td class="right">   Operation for both unicast and multicast, which is an issue in</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   constrained networks that typically use MOP 1 for unicast.  This</td><td> </td><td class="right">   constrained networks that typically use MOP 1 for unicast.  This</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   specification allows a mixed mode that is signaled as MOP 1 in the</td><td> </td><td class="right">   specification allows a mixed mode that is signaled as MOP 1 in the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   DIO messages for backward compatibility, where limited multicast and/</td><td> </td><td class="right">   DIO messages for backward compatibility, where limited multicast and/</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   or anycast is available, under the following conditions:</td><td> </td><td class="right">   or anycast is available, under the following conditions:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  There MUST be enough density of 6LRs that support the mixed mode</td><td> </td><td class="right">   *  There MUST be enough density of 6LRs that support the mixed mode</td><td class="lineno"></td></tr>
      <tr id="diff0067"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      to cover <span class="delete">the</span> all the 6LNs that require multicast or anycast</td><td> </td><td class="rblock">      to cover all the 6LNs that require multicast or anycast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      services.  In Storing Mode, there MUST be enough density <span class="delete">or 6LR</span></td><td> </td><td class="rblock">      services.  In Storing Mode, there MUST be enough density <span class="insert">of 6LRs</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      that support the mixed mode to also form a DODAG to the Root.</td><td> </td><td class="right">      that support the mixed mode to also form a DODAG to the Root.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0068"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   *  The RPL routers that support the mixed mode <span class="delete">and</span> are configured to</td><td> </td><td class="rblock">   *  The RPL routers that support the mixed mode are configured to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      operate in <span class="delete">in</span> accordance with the desired operation in the</td><td> </td><td class="rblock">      operate in accordance with the desired operation in the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      <span class="delete">network.</span></td><td> </td><td class="rblock">      <span class="insert">network (or is rest of sentence missing?).</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0069"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   *  The MOP signaled in the RPL D<span class="delete">ODAG Information Object (DIO)</span></td><td> </td><td class="rblock">   *  The MOP signaled in the RPL D<span class="insert">IO</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      messages is MOP 1 to enable the legacy nodes to operate as leaves.</td><td> </td><td class="right">      messages is MOP 1 to enable the legacy nodes to operate as leaves.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  The support of multicast and/or anycast in the RPL Instance SHOULD</td><td> </td><td class="right">   *  The support of multicast and/or anycast in the RPL Instance SHOULD</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      be signaled by the 6LRs to the 6LN using a 6CIO, see Section 5.</td><td> </td><td class="right">      be signaled by the 6LRs to the 6LN using a 6CIO, see Section 5.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   *  Alternatively, the support of multicast in the RPL domain can be</td><td> </td><td class="right">   *  Alternatively, the support of multicast in the RPL domain can be</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      globally known by other means such as configuration or external</td><td> </td><td class="right">      globally known by other means such as configuration or external</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      information such as support of a version of an industry standard</td><td> </td><td class="right">      information such as support of a version of an industry standard</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      that mandates it.  In that case, all the routers MUST support the</td><td> </td><td class="right">      that mandates it.  In that case, all the routers MUST support the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      mixed mode.</td><td> </td><td class="right">      mixed mode.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">12.  Security Considerations</td><td> </td><td class="right">12.  Security Considerations</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   This specification Extends [RFC8505] and [RFC9010], and leverages</td><td> </td><td class="right">   This specification Extends [RFC8505] and [RFC9010], and leverages</td><td class="lineno"></td></tr>
      <tr id="diff0070"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   [RFC9008].  The security section in these documents also apply to</td><td> </td><td class="rblock">   [RFC9008].  The security section<span class="insert">s</span> in these documents also apply to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   this document.  In particular, the link layer SHOULD be sufficiently</td><td> </td><td class="right">   this document.  In particular, the link layer SHOULD be sufficiently</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   protected to prevent rogue access.</td><td> </td><td class="right">   protected to prevent rogue access.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   RPL [RFC6550] already supports routing on multicast addresses,</td><td> </td><td class="right">   RPL [RFC6550] already supports routing on multicast addresses,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   whereby the endpoint that subscribes to the group and to do so</td><td> </td><td class="right">   whereby the endpoint that subscribes to the group and to do so</td><td class="lineno"></td></tr>
      <tr id="diff0071"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   injects the multicast address participates to RPL as a RPL aware node</td><td> </td><td class="rblock">   injects the multicast address participates to RPL as a<span class="insert">n</span> RPL aware node</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   (RAN).  Using an extension of RFC 8505 as opposed to RPL to subscribe</td><td> </td><td class="right">   (RAN).  Using an extension of RFC 8505 as opposed to RPL to subscribe</td><td class="lineno"></td></tr>
      <tr id="diff0072"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   the address allows a<span class="delete"> RPL unaware nod</span>e (RUL) to subscribe as well.  As</td><td> </td><td class="rblock">   the address allows a<span class="insert">n RPL unaware node (RUN) or an RPL unaware leav</span>e (RUL) to subscribe as well.  As</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   noted in [RFC9010], this provides a better security posture for the</td><td> </td><td class="right">   noted in [RFC9010], this provides a better security posture for the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   RPL network, since the nodes that do not really need to speak RPL, or</td><td> </td><td class="right">   RPL network, since the nodes that do not really need to speak RPL, or</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   are not trusted enough to inject RPL messages, can be prescribed from</td><td> </td><td class="right">   are not trusted enough to inject RPL messages, can be prescribed from</td><td class="lineno"></td></tr>
      <tr id="diff0073"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   doing so, which bars a number of attack<span class="delete">s V</span>ectors from within RPL.</td><td> </td><td class="rblock">   doing so, which bars a number of attack<span class="insert"> v</span>ectors from within RPL.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Acting as RUL, those nodes may still leverage the RPL network through</td><td> </td><td class="right">   Acting as RUL, those nodes may still leverage the RPL network through</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the capabilities that are opened via ND operations.  With this draft,</td><td> </td><td class="right">   the capabilities that are opened via ND operations.  With this draft,</td><td class="lineno"></td></tr>
      <tr id="diff0074"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   a node that needs multicast delivery can now obtain the service in <span class="delete">a</span></td><td> </td><td class="rblock">   a node that needs multicast delivery can now obtain the service in <span class="insert">an</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   RPL domain while not allowed to inject RPL messages.</td><td> </td><td class="rblock">   RPL domain while not <span class="insert">being</span> allowed to inject RPL messages.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Compared to [RFC6550], this draft enables to track the origin of the</td><td> </td><td class="right">   Compared to [RFC6550], this draft enables to track the origin of the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   multicast subscription inside the RPL network.  This is a first step</td><td> </td><td class="right">   multicast subscription inside the RPL network.  This is a first step</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   to enable Route Ownership Validation (ROV) in RPL using the ROVR</td><td> </td><td class="right">   to enable Route Ownership Validation (ROV) in RPL using the ROVR</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   field in the EARO as proof of ownership.</td><td> </td><td class="right">   field in the EARO as proof of ownership.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Section 9 leverages [RFC8928] to prevent a rogue node to register a</td><td> </td><td class="right">   Section 9 leverages [RFC8928] to prevent a rogue node to register a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   unicast address that it does not own.  The mechanism could be</td><td> </td><td class="right">   unicast address that it does not own.  The mechanism could be</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   extended to anycast and multicast addresses if the values of the ROVR</td><td> </td><td class="right">   extended to anycast and multicast addresses if the values of the ROVR</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   they use is known in advance, but how this is done is not in scope</td><td> </td><td class="right">   they use is known in advance, but how this is done is not in scope</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   for this specification.  One way would be to authorize in advance the</td><td> </td><td class="right">   for this specification.  One way would be to authorize in advance the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   ROVR of the valid users.  A less preferred way could be to</td><td> </td><td class="right">   ROVR of the valid users.  A less preferred way could be to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   synchronize the ROVR and TID values across the valid subscribers as a</td><td> </td><td class="right">   synchronize the ROVR and TID values across the valid subscribers as a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   preshared key material.</td><td> </td><td class="right">   preshared key material.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   In the latter case, it could be possible to update the keys</td><td> </td><td class="right">   In the latter case, it could be possible to update the keys</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   associated to an address in all the 6LNs, but the flow is not clearly</td><td> </td><td class="right">   associated to an address in all the 6LNs, but the flow is not clearly</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   documented and may not complete in due time for all nodes in LLN use</td><td> </td><td class="right">   documented and may not complete in due time for all nodes in LLN use</td><td class="lineno"></td></tr>
      <tr id="diff0075"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   cases.  It may be simpler to install a all-new address with new keys</td><td> </td><td class="rblock">   cases.  It may be simpler to install a<span class="insert">n</span> all-new address with new keys</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   over a period of time, and switch the traffic to that address when</td><td> </td><td class="right">   over a period of time, and switch the traffic to that address when</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the migration is complete.</td><td> </td><td class="right">   the migration is complete.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">13.  Backward Compatibility</td><td> </td><td class="right">13.  Backward Compatibility</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   A legacy 6LN will not subscribe multicast addresses and the service</td><td> </td><td class="right">   A legacy 6LN will not subscribe multicast addresses and the service</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   will be the same when the network is upgraded.  A legacy 6LR will not</td><td> </td><td class="right">   will be the same when the network is upgraded.  A legacy 6LR will not</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   set the P-Field in the 6CIO and an upgraded 6LN will not subscribe</td><td> </td><td class="right">   set the P-Field in the 6CIO and an upgraded 6LN will not subscribe</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   multicast addresses.</td><td> </td><td class="right">   multicast addresses.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Upon an EDAR message, a legacy 6LBR may not realize that the address</td><td> </td><td class="right">   Upon an EDAR message, a legacy 6LBR may not realize that the address</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   being registered is anycast or multicast, and return that it is</td><td> </td><td class="right">   being registered is anycast or multicast, and return that it is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   duplicate in the EDAC status.  The 6LR MUST ignore a duplicate status</td><td> </td><td class="right">   duplicate in the EDAC status.  The 6LR MUST ignore a duplicate status</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   in the EDAR for anycast and multicast addresses.</td><td> </td><td class="right">   in the EDAR for anycast and multicast addresses.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   As detailed in Section 11, it is possible to add multicast on an</td><td> </td><td class="right">   As detailed in Section 11, it is possible to add multicast on an</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   existing MOP 1 deployment.</td><td> </td><td class="right">   existing MOP 1 deployment.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The combination of a multicast address and the P-Field set to 0 in an</td><td> </td><td class="right">   The combination of a multicast address and the P-Field set to 0 in an</td><td class="lineno"></td></tr>
      <tr id="diff0076"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   RTO in a MOP 3 RPL Instance is understood by the receiver that</td><td> </td><td class="rblock">   RTO in a<span class="insert">n</span> MOP 3 RPL Instance is understood by the receiver that</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   supports this specification (the parent) as an indication that the</td><td> </td><td class="right">   supports this specification (the parent) as an indication that the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   sender (child) does not support this specification, but the RTO is</td><td> </td><td class="right">   sender (child) does not support this specification, but the RTO is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   accepted and processed as if the P-Field was set to 1 for backward</td><td> </td><td class="right">   accepted and processed as if the P-Field was set to 1 for backward</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   compatibility.</td><td> </td><td class="right">   compatibility.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   When the DODAG is operated in MOP 3, a legacy node will not set the</td><td> </td><td class="right">   When the DODAG is operated in MOP 3, a legacy node will not set the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   P-Field and still expect multicast service as specified in section 12</td><td> </td><td class="right">   P-Field and still expect multicast service as specified in section 12</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   of [RFC6550].  In MOP 3 an RTO that is received with a target that is</td><td> </td><td class="right">   of [RFC6550].  In MOP 3 an RTO that is received with a target that is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   multicast and the P-Field set to 0 MUST be considered as multicast</td><td> </td><td class="right">   multicast and the P-Field set to 0 MUST be considered as multicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   and MUST be processed as if the P-Field is set to 1.</td><td> </td><td class="right">   and MUST be processed as if the P-Field is set to 1.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-23" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-23"><em> page 34, line 18<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-23"><em> page 34, line 18<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">         +-------------+-----------------------------+-----------+</td><td> </td><td class="right">         +-------------+-----------------------------+-----------+</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">         | 8           | X flag: Registration for    | This RFC  |</td><td> </td><td class="right">         | 8           | X flag: Registration for    | This RFC  |</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">         | (suggested) | Unicast, Multicast, and     |           |</td><td> </td><td class="right">         | (suggested) | Unicast, Multicast, and     |           |</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">         |             | Anycast Addresses Supported |           |</td><td> </td><td class="right">         |             | Anycast Addresses Supported |           |</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">         +-------------+-----------------------------+-----------+</td><td> </td><td class="right">         +-------------+-----------------------------+-----------+</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">                    Table 8: New 6LoWPAN Capability Bits</td><td> </td><td class="right">                    Table 8: New 6LoWPAN Capability Bits</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">14.7.  New Address Registration Option Status Values</td><td> </td><td class="right">14.7.  New Address Registration Option Status Values</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0077"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   IANA <span class="delete">has mad</span>e additions to the "Address Registration Option Status</td><td> </td><td class="rblock">   IANA <span class="insert">is requested to mak</span>e additions to the "Address Registration Option Status</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Values" registry under the heading "Internet Control Message Protocol</td><td> </td><td class="right">   Values" registry under the heading "Internet Control Message Protocol</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   version 6 (ICMPv6) Parameters", as follows:</td><td> </td><td class="right">   version 6 (ICMPv6) Parameters", as follows:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       +----------------+------------------------------+-----------+</td><td> </td><td class="right">       +----------------+------------------------------+-----------+</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       | Value          | Description                  | Reference |</td><td> </td><td class="right">       | Value          | Description                  | Reference |</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       +----------------+------------------------------+-----------+</td><td> </td><td class="right">       +----------------+------------------------------+-----------+</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       | 11 (suggested) | Registration Refresh Request | This RFC  |</td><td> </td><td class="right">       | 11 (suggested) | Registration Refresh Request | This RFC  |</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       +----------------+------------------------------+-----------+</td><td> </td><td class="right">       +----------------+------------------------------+-----------+</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       | 12 (suggested) | Invalid Registration         | This RFC  |</td><td> </td><td class="right">       | 12 (suggested) | Invalid Registration         | This RFC  |</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       +----------------+------------------------------+-----------+</td><td> </td><td class="right">       +----------------+------------------------------+-----------+</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0078"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">          Table 9: New Address Registration Option Status Values<span class="delete">"</span></td><td> </td><td class="rblock">          Table 9: New Address Registration Option Status Values</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">14.8.  New IPv6 Neighbor Discovery Option</td><td> </td><td class="right">14.8.  New IPv6 Neighbor Discovery Option</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0079"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   IANA <span class="delete">has mad</span>e additions to the "IPv6 Neighbor Discovery Option</td><td> </td><td class="rblock">   IANA <span class="insert">is requested to mak</span>e additions to the "IPv6 Neighbor Discovery Option</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Formats" registry under the heading "Internet Control Message</td><td> </td><td class="right">   Formats" registry under the heading "Internet Control Message</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Protocol version 6 (ICMPv6) Parameters", as follows:</td><td> </td><td class="right">   Protocol version 6 (ICMPv6) Parameters", as follows:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">         +----------------+--------------------------+-----------+</td><td> </td><td class="right">         +----------------+--------------------------+-----------+</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">         | Value          | Description              | Reference |</td><td> </td><td class="right">         | Value          | Description              | Reference |</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">         +----------------+--------------------------+-----------+</td><td> </td><td class="right">         +----------------+--------------------------+-----------+</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">         | 42 (suggested) | Consistent Uptime Option | This RFC  |</td><td> </td><td class="right">         | 42 (suggested) | Consistent Uptime Option | This RFC  |</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">         +----------------+--------------------------+-----------+</td><td> </td><td class="right">         +----------------+--------------------------+-----------+</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0080"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">               Table 10: New IPv6 Neighbor Discovery Option<span class="delete">"</span></td><td> </td><td class="rblock">               Table 10: New IPv6 Neighbor Discovery Option</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">15.  Acknowledgments</td><td> </td><td class="right">15.  Acknowledgments</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   This work is a production of an effective collaboration between the</td><td> </td><td class="right">   This work is a production of an effective collaboration between the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   IETF 6lo WG and the Wi-Sun FAN WG.  Thanks to all in both WGs who</td><td> </td><td class="right">   IETF 6lo WG and the Wi-Sun FAN WG.  Thanks to all in both WGs who</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   contributed reviews and productive suggestions, in particular Carsten</td><td> </td><td class="right">   contributed reviews and productive suggestions, in particular Carsten</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Bormann, Paul Duffy, Klaus Hueske, Adnan Rashid, Rahul Jadhav, Gene</td><td> </td><td class="right">   Bormann, Paul Duffy, Klaus Hueske, Adnan Rashid, Rahul Jadhav, Gene</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Falendysz, Don Sturek, Dario Tedeschi, Saurabh Jain, and Chris Hett.</td><td> </td><td class="right">   Falendysz, Don Sturek, Dario Tedeschi, Saurabh Jain, and Chris Hett.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Also many thanks to Kyle Rose, Scott Kelly, and Dan Romascanu for</td><td> </td><td class="right">   Also many thanks to Kyle Rose, Scott Kelly, and Dan Romascanu for</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   their suggestions and comments during the IETF last call and IESG</td><td> </td><td class="right">   their suggestions and comments during the IETF last call and IESG</td><td class="lineno"></td></tr>

     <tr><td></td><td class="left"></td><td> </td><td class="right"></td><td></td></tr>
     <tr id="end" bgcolor="gray"><th colspan="5" align="center">&nbsp;End of changes. 80 change blocks.&nbsp;</th></tr>
     <tr class="stats"><td></td><th><i>87 lines changed or deleted</i></th><th><i> </i></th><th><i>90 lines changed or added</i></th><td></td></tr>
     <tr><td colspan="5" align="center" class="small"><br/>This html diff was produced by rfcdiff 1.45. The latest version is available from <a href="http://www.tools.ietf.org/tools/rfcdiff/" >http://tools.ietf.org/tools/rfcdiff/</a> </td></tr>
   </table>
   </body>
   </html>
